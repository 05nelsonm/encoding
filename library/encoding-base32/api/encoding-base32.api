public abstract class io/matthewnelson/component/encoding/base32/Base32 {
}

public final class io/matthewnelson/component/encoding/base32/Base32$Crockford : io/matthewnelson/component/encoding/base32/Base32 {
	public static final field CHARS Ljava/lang/String;
	public static final field Companion Lio/matthewnelson/component/encoding/base32/Base32$Crockford$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/lang/Character;)V
	public synthetic fun <init> (Ljava/lang/Character;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/Character;
	public final fun copy (Ljava/lang/Character;)Lio/matthewnelson/component/encoding/base32/Base32$Crockford;
	public static synthetic fun copy$default (Lio/matthewnelson/component/encoding/base32/Base32$Crockford;Ljava/lang/Character;ILjava/lang/Object;)Lio/matthewnelson/component/encoding/base32/Base32$Crockford;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCheckByte ()Ljava/lang/Byte;
	public final fun getCheckSymbol ()Ljava/lang/Character;
	public final fun getHasCheckSymbol ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/matthewnelson/component/encoding/base32/Base32$Crockford$Companion {
}

public final class io/matthewnelson/component/encoding/base32/Base32$Default : io/matthewnelson/component/encoding/base32/Base32 {
	public static final field CHARS Ljava/lang/String;
	public static final field INSTANCE Lio/matthewnelson/component/encoding/base32/Base32$Default;
}

public final class io/matthewnelson/component/encoding/base32/Base32$Hex : io/matthewnelson/component/encoding/base32/Base32 {
	public static final field CHARS Ljava/lang/String;
	public static final field INSTANCE Lio/matthewnelson/component/encoding/base32/Base32$Hex;
}

public final class io/matthewnelson/component/encoding/base32/Base32Kt {
	public static final fun decodeBase32ToArray (Ljava/lang/String;)[B
	public static final fun decodeBase32ToArray (Ljava/lang/String;Lio/matthewnelson/component/encoding/base32/Base32$Crockford;)[B
	public static final fun decodeBase32ToArray (Ljava/lang/String;Lio/matthewnelson/component/encoding/base32/Base32$Default;)[B
	public static final fun decodeBase32ToArray (Ljava/lang/String;Lio/matthewnelson/component/encoding/base32/Base32$Hex;)[B
	public static final fun decodeBase32ToArray ([C)[B
	public static final fun decodeBase32ToArray ([CLio/matthewnelson/component/encoding/base32/Base32$Crockford;)[B
	public static final fun decodeBase32ToArray ([CLio/matthewnelson/component/encoding/base32/Base32$Default;)[B
	public static final fun decodeBase32ToArray ([CLio/matthewnelson/component/encoding/base32/Base32$Hex;)[B
	public static synthetic fun decodeBase32ToArray$default (Ljava/lang/String;Lio/matthewnelson/component/encoding/base32/Base32$Default;ILjava/lang/Object;)[B
	public static synthetic fun decodeBase32ToArray$default ([CLio/matthewnelson/component/encoding/base32/Base32$Default;ILjava/lang/Object;)[B
	public static final fun encodeBase32 ([B)Ljava/lang/String;
	public static final fun encodeBase32 ([BLio/matthewnelson/component/encoding/base32/Base32$Crockford;)Ljava/lang/String;
	public static final fun encodeBase32 ([BLio/matthewnelson/component/encoding/base32/Base32$Default;)Ljava/lang/String;
	public static final fun encodeBase32 ([BLio/matthewnelson/component/encoding/base32/Base32$Hex;)Ljava/lang/String;
	public static synthetic fun encodeBase32$default ([BLio/matthewnelson/component/encoding/base32/Base32$Default;ILjava/lang/Object;)Ljava/lang/String;
	public static final fun encodeBase32ToByteArray ([B)[B
	public static final fun encodeBase32ToByteArray ([BLio/matthewnelson/component/encoding/base32/Base32$Crockford;)[B
	public static final fun encodeBase32ToByteArray ([BLio/matthewnelson/component/encoding/base32/Base32$Default;)[B
	public static final fun encodeBase32ToByteArray ([BLio/matthewnelson/component/encoding/base32/Base32$Hex;)[B
	public static synthetic fun encodeBase32ToByteArray$default ([BLio/matthewnelson/component/encoding/base32/Base32$Default;ILjava/lang/Object;)[B
	public static final fun encodeBase32ToCharArray ([B)[C
	public static final fun encodeBase32ToCharArray ([BLio/matthewnelson/component/encoding/base32/Base32$Crockford;)[C
	public static final fun encodeBase32ToCharArray ([BLio/matthewnelson/component/encoding/base32/Base32$Default;)[C
	public static final fun encodeBase32ToCharArray ([BLio/matthewnelson/component/encoding/base32/Base32$Hex;)[C
	public static synthetic fun encodeBase32ToCharArray$default ([BLio/matthewnelson/component/encoding/base32/Base32$Default;ILjava/lang/Object;)[C
}

public abstract class io/matthewnelson/encoding/base32/Base32 : io/matthewnelson/encoding/core/EncoderDecoder {
	public synthetic fun <init> (Lio/matthewnelson/encoding/core/EncoderDecoder$Config;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class io/matthewnelson/encoding/base32/Base32$Crockford : io/matthewnelson/encoding/base32/Base32 {
	public static final field CHARS_LOWER Ljava/lang/String;
	public static final field CHARS_UPPER Ljava/lang/String;
	public static final field Companion Lio/matthewnelson/encoding/base32/Base32$Crockford$Companion;
	public fun <init> (Lio/matthewnelson/encoding/base32/Base32$Crockford$Config;)V
}

public final class io/matthewnelson/encoding/base32/Base32$Crockford$Companion {
}

public final class io/matthewnelson/encoding/base32/Base32$Crockford$Config : io/matthewnelson/encoding/core/EncoderDecoder$Config {
	public final field checkSymbol Ljava/lang/Character;
	public final field encodeToLowercase Z
	public final field hyphenInterval B
	public synthetic fun <init> (ZZBLjava/lang/Character;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class io/matthewnelson/encoding/base32/Base32$Default : io/matthewnelson/encoding/base32/Base32 {
	public static final field CHARS_LOWER Ljava/lang/String;
	public static final field CHARS_UPPER Ljava/lang/String;
	public static final field Companion Lio/matthewnelson/encoding/base32/Base32$Default$Companion;
	public fun <init> (Lio/matthewnelson/encoding/base32/Base32$Default$Config;)V
}

public final class io/matthewnelson/encoding/base32/Base32$Default$Companion {
}

public final class io/matthewnelson/encoding/base32/Base32$Default$Config : io/matthewnelson/encoding/core/EncoderDecoder$Config {
	public final field encodeToLowercase Z
	public final field padEncoded Z
	public synthetic fun <init> (ZBZZLkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class io/matthewnelson/encoding/base32/Base32$Hex : io/matthewnelson/encoding/base32/Base32 {
	public static final field CHARS_LOWER Ljava/lang/String;
	public static final field CHARS_UPPER Ljava/lang/String;
	public static final field Companion Lio/matthewnelson/encoding/base32/Base32$Hex$Companion;
	public fun <init> (Lio/matthewnelson/encoding/base32/Base32$Hex$Config;)V
}

public final class io/matthewnelson/encoding/base32/Base32$Hex$Companion {
}

public final class io/matthewnelson/encoding/base32/Base32$Hex$Config : io/matthewnelson/encoding/core/EncoderDecoder$Config {
	public final field encodeToLowercase Z
	public final field padEncoded Z
	public synthetic fun <init> (ZBZZLkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class io/matthewnelson/encoding/builders/Base32CrockfordConfigBuilder {
	public field encodeToLowercase Z
	public field hyphenInterval B
	public field isLenient Z
	public fun <init> ()V
	public fun <init> (Lio/matthewnelson/encoding/base32/Base32$Crockford$Config;)V
	public final fun build ()Lio/matthewnelson/encoding/base32/Base32$Crockford$Config;
	public final fun checkSymbol ()Ljava/lang/Character;
	public final fun checkSymbol (Ljava/lang/Character;)Lio/matthewnelson/encoding/builders/Base32CrockfordConfigBuilder;
	public final fun strict ()Lio/matthewnelson/encoding/builders/Base32CrockfordConfigBuilder;
}

public final class io/matthewnelson/encoding/builders/Base32DefaultConfigBuilder {
	public field encodeToLowercase Z
	public field isLenient Z
	public field lineBreakInterval B
	public field padEncoded Z
	public fun <init> ()V
	public fun <init> (Lio/matthewnelson/encoding/base32/Base32$Default$Config;)V
	public final fun build ()Lio/matthewnelson/encoding/base32/Base32$Default$Config;
	public final fun strict ()Lio/matthewnelson/encoding/builders/Base32DefaultConfigBuilder;
}

public final class io/matthewnelson/encoding/builders/Base32HexConfigBuilder {
	public field encodeToLowercase Z
	public field isLenient Z
	public field lineBreakInterval B
	public field padEncoded Z
	public fun <init> ()V
	public fun <init> (Lio/matthewnelson/encoding/base32/Base32$Hex$Config;)V
	public final fun build ()Lio/matthewnelson/encoding/base32/Base32$Hex$Config;
	public final fun strict ()Lio/matthewnelson/encoding/builders/Base32HexConfigBuilder;
}

public final class io/matthewnelson/encoding/builders/Base32Kt {
	public static final fun Base32Crockford ()Lio/matthewnelson/encoding/base32/Base32$Crockford;
	public static final fun Base32Crockford (Lio/matthewnelson/encoding/base32/Base32$Crockford$Config;Lkotlin/jvm/functions/Function1;)Lio/matthewnelson/encoding/base32/Base32$Crockford;
	public static final fun Base32Crockford (Lkotlin/jvm/functions/Function1;)Lio/matthewnelson/encoding/base32/Base32$Crockford;
	public static final fun Base32Crockford (Z)Lio/matthewnelson/encoding/base32/Base32$Crockford;
	public static synthetic fun Base32Crockford$default (ZILjava/lang/Object;)Lio/matthewnelson/encoding/base32/Base32$Crockford;
	public static final fun Base32Default ()Lio/matthewnelson/encoding/base32/Base32$Default;
	public static final fun Base32Default (Lio/matthewnelson/encoding/base32/Base32$Default$Config;Lkotlin/jvm/functions/Function1;)Lio/matthewnelson/encoding/base32/Base32$Default;
	public static final fun Base32Default (Lkotlin/jvm/functions/Function1;)Lio/matthewnelson/encoding/base32/Base32$Default;
	public static final fun Base32Default (Z)Lio/matthewnelson/encoding/base32/Base32$Default;
	public static synthetic fun Base32Default$default (ZILjava/lang/Object;)Lio/matthewnelson/encoding/base32/Base32$Default;
	public static final fun Base32Hex ()Lio/matthewnelson/encoding/base32/Base32$Hex;
	public static final fun Base32Hex (Lio/matthewnelson/encoding/base32/Base32$Hex$Config;Lkotlin/jvm/functions/Function1;)Lio/matthewnelson/encoding/base32/Base32$Hex;
	public static final fun Base32Hex (Lkotlin/jvm/functions/Function1;)Lio/matthewnelson/encoding/base32/Base32$Hex;
	public static final fun Base32Hex (Z)Lio/matthewnelson/encoding/base32/Base32$Hex;
	public static synthetic fun Base32Hex$default (ZILjava/lang/Object;)Lio/matthewnelson/encoding/base32/Base32$Hex;
}

