// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, wasmWasi, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.matthewnelson.encoding:base16>
final class io.matthewnelson.encoding.base16/Base16 : io.matthewnelson.encoding.core/EncoderDecoder<io.matthewnelson.encoding.base16/Base16.Config> { // io.matthewnelson.encoding.base16/Base16|null[0]
    constructor <init>(io.matthewnelson.encoding.base16/Base16.Config) // io.matthewnelson.encoding.base16/Base16.<init>|<init>(io.matthewnelson.encoding.base16.Base16.Config){}[0]

    final class Config : io.matthewnelson.encoding.core/EncoderDecoder.Config { // io.matthewnelson.encoding.base16/Base16.Config|null[0]
        final val encodeToLowercase // io.matthewnelson.encoding.base16/Base16.Config.encodeToLowercase|{}encodeToLowercase[0]
            final fun <get-encodeToLowercase>(): kotlin/Boolean // io.matthewnelson.encoding.base16/Base16.Config.encodeToLowercase.<get-encodeToLowercase>|<get-encodeToLowercase>(){}[0]
        final val isConstantTime // io.matthewnelson.encoding.base16/Base16.Config.isConstantTime|{}isConstantTime[0]
            final fun <get-isConstantTime>(): kotlin/Boolean // io.matthewnelson.encoding.base16/Base16.Config.isConstantTime.<get-isConstantTime>|<get-isConstantTime>(){}[0]
    }

    final object Companion : io.matthewnelson.encoding.core/EncoderDecoder<io.matthewnelson.encoding.base16/Base16.Config> { // io.matthewnelson.encoding.base16/Base16.Companion|null[0]
        final const val CHARS_LOWER // io.matthewnelson.encoding.base16/Base16.Companion.CHARS_LOWER|{}CHARS_LOWER[0]
            final fun <get-CHARS_LOWER>(): kotlin/String // io.matthewnelson.encoding.base16/Base16.Companion.CHARS_LOWER.<get-CHARS_LOWER>|<get-CHARS_LOWER>(){}[0]
        final const val CHARS_UPPER // io.matthewnelson.encoding.base16/Base16.Companion.CHARS_UPPER|{}CHARS_UPPER[0]
            final fun <get-CHARS_UPPER>(): kotlin/String // io.matthewnelson.encoding.base16/Base16.Companion.CHARS_UPPER.<get-CHARS_UPPER>|<get-CHARS_UPPER>(){}[0]
    }
}

final class io.matthewnelson.encoding.base16/Base16ConfigBuilder { // io.matthewnelson.encoding.base16/Base16ConfigBuilder|null[0]
    constructor <init>() // io.matthewnelson.encoding.base16/Base16ConfigBuilder.<init>|<init>(){}[0]
    constructor <init>(io.matthewnelson.encoding.base16/Base16.Config?) // io.matthewnelson.encoding.base16/Base16ConfigBuilder.<init>|<init>(io.matthewnelson.encoding.base16.Base16.Config?){}[0]

    final var encodeToLowercase // io.matthewnelson.encoding.base16/Base16ConfigBuilder.encodeToLowercase|{}encodeToLowercase[0]
        final fun <get-encodeToLowercase>(): kotlin/Boolean // io.matthewnelson.encoding.base16/Base16ConfigBuilder.encodeToLowercase.<get-encodeToLowercase>|<get-encodeToLowercase>(){}[0]
        final fun <set-encodeToLowercase>(kotlin/Boolean) // io.matthewnelson.encoding.base16/Base16ConfigBuilder.encodeToLowercase.<set-encodeToLowercase>|<set-encodeToLowercase>(kotlin.Boolean){}[0]
    final var isConstantTime // io.matthewnelson.encoding.base16/Base16ConfigBuilder.isConstantTime|{}isConstantTime[0]
        final fun <get-isConstantTime>(): kotlin/Boolean // io.matthewnelson.encoding.base16/Base16ConfigBuilder.isConstantTime.<get-isConstantTime>|<get-isConstantTime>(){}[0]
        final fun <set-isConstantTime>(kotlin/Boolean) // io.matthewnelson.encoding.base16/Base16ConfigBuilder.isConstantTime.<set-isConstantTime>|<set-isConstantTime>(kotlin.Boolean){}[0]
    final var isLenient // io.matthewnelson.encoding.base16/Base16ConfigBuilder.isLenient|{}isLenient[0]
        final fun <get-isLenient>(): kotlin/Boolean // io.matthewnelson.encoding.base16/Base16ConfigBuilder.isLenient.<get-isLenient>|<get-isLenient>(){}[0]
        final fun <set-isLenient>(kotlin/Boolean) // io.matthewnelson.encoding.base16/Base16ConfigBuilder.isLenient.<set-isLenient>|<set-isLenient>(kotlin.Boolean){}[0]
    final var lineBreakInterval // io.matthewnelson.encoding.base16/Base16ConfigBuilder.lineBreakInterval|{}lineBreakInterval[0]
        final fun <get-lineBreakInterval>(): kotlin/Byte // io.matthewnelson.encoding.base16/Base16ConfigBuilder.lineBreakInterval.<get-lineBreakInterval>|<get-lineBreakInterval>(){}[0]
        final fun <set-lineBreakInterval>(kotlin/Byte) // io.matthewnelson.encoding.base16/Base16ConfigBuilder.lineBreakInterval.<set-lineBreakInterval>|<set-lineBreakInterval>(kotlin.Byte){}[0]

    final fun build(): io.matthewnelson.encoding.base16/Base16.Config // io.matthewnelson.encoding.base16/Base16ConfigBuilder.build|build(){}[0]
    final fun strict(): io.matthewnelson.encoding.base16/Base16ConfigBuilder // io.matthewnelson.encoding.base16/Base16ConfigBuilder.strict|strict(){}[0]
}

final fun (kotlin/ByteArray).io.matthewnelson.component.encoding.base16/encodeBase16ToByteArray(): kotlin/ByteArray // io.matthewnelson.component.encoding.base16/encodeBase16ToByteArray|encodeBase16ToByteArray@kotlin.ByteArray(){}[0]
final fun (kotlin/CharArray).io.matthewnelson.component.encoding.base16/decodeBase16ToArray(): kotlin/ByteArray? // io.matthewnelson.component.encoding.base16/decodeBase16ToArray|decodeBase16ToArray@kotlin.CharArray(){}[0]
final fun io.matthewnelson.encoding.base16/Base16(io.matthewnelson.encoding.base16/Base16.Config?, kotlin/Function1<io.matthewnelson.encoding.base16/Base16ConfigBuilder, kotlin/Unit>): io.matthewnelson.encoding.base16/Base16 // io.matthewnelson.encoding.base16/Base16|Base16(io.matthewnelson.encoding.base16.Base16.Config?;kotlin.Function1<io.matthewnelson.encoding.base16.Base16ConfigBuilder,kotlin.Unit>){}[0]
final fun io.matthewnelson.encoding.base16/Base16(kotlin/Boolean = ...): io.matthewnelson.encoding.base16/Base16 // io.matthewnelson.encoding.base16/Base16|Base16(kotlin.Boolean){}[0]
final fun io.matthewnelson.encoding.base16/Base16(kotlin/Function1<io.matthewnelson.encoding.base16/Base16ConfigBuilder, kotlin/Unit>): io.matthewnelson.encoding.base16/Base16 // io.matthewnelson.encoding.base16/Base16|Base16(kotlin.Function1<io.matthewnelson.encoding.base16.Base16ConfigBuilder,kotlin.Unit>){}[0]
final inline fun (kotlin/ByteArray).io.matthewnelson.component.encoding.base16/encodeBase16(): kotlin/String // io.matthewnelson.component.encoding.base16/encodeBase16|encodeBase16@kotlin.ByteArray(){}[0]
final inline fun (kotlin/ByteArray).io.matthewnelson.component.encoding.base16/encodeBase16ToCharArray(): kotlin/CharArray // io.matthewnelson.component.encoding.base16/encodeBase16ToCharArray|encodeBase16ToCharArray@kotlin.ByteArray(){}[0]
final inline fun (kotlin/String).io.matthewnelson.component.encoding.base16/decodeBase16ToArray(): kotlin/ByteArray? // io.matthewnelson.component.encoding.base16/decodeBase16ToArray|decodeBase16ToArray@kotlin.String(){}[0]
