[{"name":"class Base16(config: Base16.Config) : EncoderDecoder<Base16.Config> ","description":"io.matthewnelson.encoding.base16.Base16","location":"library/base16/io.matthewnelson.encoding.base16/-base16/index.html","searchKeys":["Base16","class Base16(config: Base16.Config) : EncoderDecoder<Base16.Config> ","io.matthewnelson.encoding.base16.Base16"]},{"name":"class Base16ConfigBuilder","description":"io.matthewnelson.encoding.base16.Base16ConfigBuilder","location":"library/base16/io.matthewnelson.encoding.base16/-base16-config-builder/index.html","searchKeys":["Base16ConfigBuilder","class Base16ConfigBuilder","io.matthewnelson.encoding.base16.Base16ConfigBuilder"]},{"name":"class Config : EncoderDecoder.Config","description":"io.matthewnelson.encoding.base16.Base16.Config","location":"library/base16/io.matthewnelson.encoding.base16/-base16/-config/index.html","searchKeys":["Config","class Config : EncoderDecoder.Config","io.matthewnelson.encoding.base16.Base16.Config"]},{"name":"const val CHARS_LOWER: String","description":"io.matthewnelson.encoding.base16.Base16.Companion.CHARS_LOWER","location":"library/base16/io.matthewnelson.encoding.base16/-base16/-companion/-c-h-a-r-s_-l-o-w-e-r.html","searchKeys":["CHARS_LOWER","const val CHARS_LOWER: String","io.matthewnelson.encoding.base16.Base16.Companion.CHARS_LOWER"]},{"name":"const val CHARS_UPPER: String","description":"io.matthewnelson.encoding.base16.Base16.Companion.CHARS_UPPER","location":"library/base16/io.matthewnelson.encoding.base16/-base16/-companion/-c-h-a-r-s_-u-p-p-e-r.html","searchKeys":["CHARS_UPPER","const val CHARS_UPPER: String","io.matthewnelson.encoding.base16.Base16.Companion.CHARS_UPPER"]},{"name":"constructor()","description":"io.matthewnelson.encoding.base16.Base16ConfigBuilder.Base16ConfigBuilder","location":"library/base16/io.matthewnelson.encoding.base16/-base16-config-builder/-base16-config-builder.html","searchKeys":["Base16ConfigBuilder","constructor()","io.matthewnelson.encoding.base16.Base16ConfigBuilder.Base16ConfigBuilder"]},{"name":"constructor(config: Base16.Config)","description":"io.matthewnelson.encoding.base16.Base16.Base16","location":"library/base16/io.matthewnelson.encoding.base16/-base16/-base16.html","searchKeys":["Base16","constructor(config: Base16.Config)","io.matthewnelson.encoding.base16.Base16.Base16"]},{"name":"constructor(config: Base16.Config?)","description":"io.matthewnelson.encoding.base16.Base16ConfigBuilder.Base16ConfigBuilder","location":"library/base16/io.matthewnelson.encoding.base16/-base16-config-builder/-base16-config-builder.html","searchKeys":["Base16ConfigBuilder","constructor(config: Base16.Config?)","io.matthewnelson.encoding.base16.Base16ConfigBuilder.Base16ConfigBuilder"]},{"name":"fun Base16(block: Base16ConfigBuilder.() -> Unit): Base16","description":"io.matthewnelson.encoding.base16.Base16","location":"library/base16/io.matthewnelson.encoding.base16/-base16.html","searchKeys":["Base16","fun Base16(block: Base16ConfigBuilder.() -> Unit): Base16","io.matthewnelson.encoding.base16.Base16"]},{"name":"fun Base16(config: Base16.Config?, block: Base16ConfigBuilder.() -> Unit): Base16","description":"io.matthewnelson.encoding.base16.Base16","location":"library/base16/io.matthewnelson.encoding.base16/-base16.html","searchKeys":["Base16","fun Base16(config: Base16.Config?, block: Base16ConfigBuilder.() -> Unit): Base16","io.matthewnelson.encoding.base16.Base16"]},{"name":"fun Base16(strict: Boolean = false): Base16","description":"io.matthewnelson.encoding.base16.Base16","location":"library/base16/io.matthewnelson.encoding.base16/-base16.html","searchKeys":["Base16","fun Base16(strict: Boolean = false): Base16","io.matthewnelson.encoding.base16.Base16"]},{"name":"fun build(): Base16.Config","description":"io.matthewnelson.encoding.base16.Base16ConfigBuilder.build","location":"library/base16/io.matthewnelson.encoding.base16/-base16-config-builder/build.html","searchKeys":["build","fun build(): Base16.Config","io.matthewnelson.encoding.base16.Base16ConfigBuilder.build"]},{"name":"fun strict(): Base16ConfigBuilder","description":"io.matthewnelson.encoding.base16.Base16ConfigBuilder.strict","location":"library/base16/io.matthewnelson.encoding.base16/-base16-config-builder/strict.html","searchKeys":["strict","fun strict(): Base16ConfigBuilder","io.matthewnelson.encoding.base16.Base16ConfigBuilder.strict"]},{"name":"object Companion : EncoderDecoder<Base16.Config> ","description":"io.matthewnelson.encoding.base16.Base16.Companion","location":"library/base16/io.matthewnelson.encoding.base16/-base16/-companion/index.html","searchKeys":["Companion","object Companion : EncoderDecoder<Base16.Config> ","io.matthewnelson.encoding.base16.Base16.Companion"]},{"name":"protected open override fun decodeOutMaxSizeOrFailProtected(encodedSize: Int, input: DecoderInput): Int","description":"io.matthewnelson.encoding.base16.Base16.Config.decodeOutMaxSizeOrFailProtected","location":"library/base16/io.matthewnelson.encoding.base16/-base16/-config/decode-out-max-size-or-fail-protected.html","searchKeys":["decodeOutMaxSizeOrFailProtected","protected open override fun decodeOutMaxSizeOrFailProtected(encodedSize: Int, input: DecoderInput): Int","io.matthewnelson.encoding.base16.Base16.Config.decodeOutMaxSizeOrFailProtected"]},{"name":"protected open override fun decodeOutMaxSizeProtected(encodedSize: Long): Long","description":"io.matthewnelson.encoding.base16.Base16.Config.decodeOutMaxSizeProtected","location":"library/base16/io.matthewnelson.encoding.base16/-base16/-config/decode-out-max-size-protected.html","searchKeys":["decodeOutMaxSizeProtected","protected open override fun decodeOutMaxSizeProtected(encodedSize: Long): Long","io.matthewnelson.encoding.base16.Base16.Config.decodeOutMaxSizeProtected"]},{"name":"protected open override fun encodeOutSizeProtected(unEncodedSize: Long): Long","description":"io.matthewnelson.encoding.base16.Base16.Config.encodeOutSizeProtected","location":"library/base16/io.matthewnelson.encoding.base16/-base16/-config/encode-out-size-protected.html","searchKeys":["encodeOutSizeProtected","protected open override fun encodeOutSizeProtected(unEncodedSize: Long): Long","io.matthewnelson.encoding.base16.Base16.Config.encodeOutSizeProtected"]},{"name":"protected open override fun name(): String","description":"io.matthewnelson.encoding.base16.Base16.Companion.name","location":"library/base16/io.matthewnelson.encoding.base16/-base16/-companion/name.html","searchKeys":["name","protected open override fun name(): String","io.matthewnelson.encoding.base16.Base16.Companion.name"]},{"name":"protected open override fun name(): String","description":"io.matthewnelson.encoding.base16.Base16.name","location":"library/base16/io.matthewnelson.encoding.base16/-base16/name.html","searchKeys":["name","protected open override fun name(): String","io.matthewnelson.encoding.base16.Base16.name"]},{"name":"protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base16.Config>","description":"io.matthewnelson.encoding.base16.Base16.Companion.newDecoderFeedProtected","location":"library/base16/io.matthewnelson.encoding.base16/-base16/-companion/new-decoder-feed-protected.html","searchKeys":["newDecoderFeedProtected","protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base16.Config>","io.matthewnelson.encoding.base16.Base16.Companion.newDecoderFeedProtected"]},{"name":"protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base16.Config>","description":"io.matthewnelson.encoding.base16.Base16.newDecoderFeedProtected","location":"library/base16/io.matthewnelson.encoding.base16/-base16/new-decoder-feed-protected.html","searchKeys":["newDecoderFeedProtected","protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base16.Config>","io.matthewnelson.encoding.base16.Base16.newDecoderFeedProtected"]},{"name":"protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base16.Config>","description":"io.matthewnelson.encoding.base16.Base16.Companion.newEncoderFeedProtected","location":"library/base16/io.matthewnelson.encoding.base16/-base16/-companion/new-encoder-feed-protected.html","searchKeys":["newEncoderFeedProtected","protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base16.Config>","io.matthewnelson.encoding.base16.Base16.Companion.newEncoderFeedProtected"]},{"name":"protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base16.Config>","description":"io.matthewnelson.encoding.base16.Base16.newEncoderFeedProtected","location":"library/base16/io.matthewnelson.encoding.base16/-base16/new-encoder-feed-protected.html","searchKeys":["newEncoderFeedProtected","protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base16.Config>","io.matthewnelson.encoding.base16.Base16.newEncoderFeedProtected"]},{"name":"protected open override fun toStringAddSettings(): Set<EncoderDecoder.Config.Setting>","description":"io.matthewnelson.encoding.base16.Base16.Config.toStringAddSettings","location":"library/base16/io.matthewnelson.encoding.base16/-base16/-config/to-string-add-settings.html","searchKeys":["toStringAddSettings","protected open override fun toStringAddSettings(): Set<EncoderDecoder.Config.Setting>","io.matthewnelson.encoding.base16.Base16.Config.toStringAddSettings"]},{"name":"val encodeToLowercase: Boolean","description":"io.matthewnelson.encoding.base16.Base16.Config.encodeToLowercase","location":"library/base16/io.matthewnelson.encoding.base16/-base16/-config/encode-to-lowercase.html","searchKeys":["encodeToLowercase","val encodeToLowercase: Boolean","io.matthewnelson.encoding.base16.Base16.Config.encodeToLowercase"]},{"name":"val isConstantTime: Boolean","description":"io.matthewnelson.encoding.base16.Base16.Config.isConstantTime","location":"library/base16/io.matthewnelson.encoding.base16/-base16/-config/is-constant-time.html","searchKeys":["isConstantTime","val isConstantTime: Boolean","io.matthewnelson.encoding.base16.Base16.Config.isConstantTime"]},{"name":"var encodeToLowercase: Boolean","description":"io.matthewnelson.encoding.base16.Base16ConfigBuilder.encodeToLowercase","location":"library/base16/io.matthewnelson.encoding.base16/-base16-config-builder/encode-to-lowercase.html","searchKeys":["encodeToLowercase","var encodeToLowercase: Boolean","io.matthewnelson.encoding.base16.Base16ConfigBuilder.encodeToLowercase"]},{"name":"var isConstantTime: Boolean","description":"io.matthewnelson.encoding.base16.Base16ConfigBuilder.isConstantTime","location":"library/base16/io.matthewnelson.encoding.base16/-base16-config-builder/is-constant-time.html","searchKeys":["isConstantTime","var isConstantTime: Boolean","io.matthewnelson.encoding.base16.Base16ConfigBuilder.isConstantTime"]},{"name":"var isLenient: Boolean","description":"io.matthewnelson.encoding.base16.Base16ConfigBuilder.isLenient","location":"library/base16/io.matthewnelson.encoding.base16/-base16-config-builder/is-lenient.html","searchKeys":["isLenient","var isLenient: Boolean","io.matthewnelson.encoding.base16.Base16ConfigBuilder.isLenient"]},{"name":"var lineBreakInterval: Byte","description":"io.matthewnelson.encoding.base16.Base16ConfigBuilder.lineBreakInterval","location":"library/base16/io.matthewnelson.encoding.base16/-base16-config-builder/line-break-interval.html","searchKeys":["lineBreakInterval","var lineBreakInterval: Byte","io.matthewnelson.encoding.base16.Base16ConfigBuilder.lineBreakInterval"]},{"name":"class Base32CrockfordConfigBuilder","description":"io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder","location":"library/base32/io.matthewnelson.encoding.base32/-base32-crockford-config-builder/index.html","searchKeys":["Base32CrockfordConfigBuilder","class Base32CrockfordConfigBuilder","io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder"]},{"name":"class Base32DefaultConfigBuilder","description":"io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder","location":"library/base32/io.matthewnelson.encoding.base32/-base32-default-config-builder/index.html","searchKeys":["Base32DefaultConfigBuilder","class Base32DefaultConfigBuilder","io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder"]},{"name":"class Base32HexConfigBuilder","description":"io.matthewnelson.encoding.base32.Base32HexConfigBuilder","location":"library/base32/io.matthewnelson.encoding.base32/-base32-hex-config-builder/index.html","searchKeys":["Base32HexConfigBuilder","class Base32HexConfigBuilder","io.matthewnelson.encoding.base32.Base32HexConfigBuilder"]},{"name":"class Config : EncoderDecoder.Config","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Config","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-config/index.html","searchKeys":["Config","class Config : EncoderDecoder.Config","io.matthewnelson.encoding.base32.Base32.Crockford.Config"]},{"name":"class Config : EncoderDecoder.Config","description":"io.matthewnelson.encoding.base32.Base32.Default.Config","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/-config/index.html","searchKeys":["Config","class Config : EncoderDecoder.Config","io.matthewnelson.encoding.base32.Base32.Default.Config"]},{"name":"class Config : EncoderDecoder.Config","description":"io.matthewnelson.encoding.base32.Base32.Hex.Config","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/-config/index.html","searchKeys":["Config","class Config : EncoderDecoder.Config","io.matthewnelson.encoding.base32.Base32.Hex.Config"]},{"name":"class Crockford(config: Base32.Crockford.Config) : Base32<Base32.Crockford.Config> ","description":"io.matthewnelson.encoding.base32.Base32.Crockford","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/index.html","searchKeys":["Crockford","class Crockford(config: Base32.Crockford.Config) : Base32<Base32.Crockford.Config> ","io.matthewnelson.encoding.base32.Base32.Crockford"]},{"name":"class Default(config: Base32.Default.Config) : Base32<Base32.Default.Config> ","description":"io.matthewnelson.encoding.base32.Base32.Default","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/index.html","searchKeys":["Default","class Default(config: Base32.Default.Config) : Base32<Base32.Default.Config> ","io.matthewnelson.encoding.base32.Base32.Default"]},{"name":"class Hex(config: Base32.Hex.Config) : Base32<Base32.Hex.Config> ","description":"io.matthewnelson.encoding.base32.Base32.Hex","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/index.html","searchKeys":["Hex","class Hex(config: Base32.Hex.Config) : Base32<Base32.Hex.Config> ","io.matthewnelson.encoding.base32.Base32.Hex"]},{"name":"const val CHARS_LOWER: String","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Companion.CHARS_LOWER","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-companion/-c-h-a-r-s_-l-o-w-e-r.html","searchKeys":["CHARS_LOWER","const val CHARS_LOWER: String","io.matthewnelson.encoding.base32.Base32.Crockford.Companion.CHARS_LOWER"]},{"name":"const val CHARS_LOWER: String","description":"io.matthewnelson.encoding.base32.Base32.Default.Companion.CHARS_LOWER","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/-companion/-c-h-a-r-s_-l-o-w-e-r.html","searchKeys":["CHARS_LOWER","const val CHARS_LOWER: String","io.matthewnelson.encoding.base32.Base32.Default.Companion.CHARS_LOWER"]},{"name":"const val CHARS_LOWER: String","description":"io.matthewnelson.encoding.base32.Base32.Hex.Companion.CHARS_LOWER","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/-companion/-c-h-a-r-s_-l-o-w-e-r.html","searchKeys":["CHARS_LOWER","const val CHARS_LOWER: String","io.matthewnelson.encoding.base32.Base32.Hex.Companion.CHARS_LOWER"]},{"name":"const val CHARS_UPPER: String","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Companion.CHARS_UPPER","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-companion/-c-h-a-r-s_-u-p-p-e-r.html","searchKeys":["CHARS_UPPER","const val CHARS_UPPER: String","io.matthewnelson.encoding.base32.Base32.Crockford.Companion.CHARS_UPPER"]},{"name":"const val CHARS_UPPER: String","description":"io.matthewnelson.encoding.base32.Base32.Default.Companion.CHARS_UPPER","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/-companion/-c-h-a-r-s_-u-p-p-e-r.html","searchKeys":["CHARS_UPPER","const val CHARS_UPPER: String","io.matthewnelson.encoding.base32.Base32.Default.Companion.CHARS_UPPER"]},{"name":"const val CHARS_UPPER: String","description":"io.matthewnelson.encoding.base32.Base32.Hex.Companion.CHARS_UPPER","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/-companion/-c-h-a-r-s_-u-p-p-e-r.html","searchKeys":["CHARS_UPPER","const val CHARS_UPPER: String","io.matthewnelson.encoding.base32.Base32.Hex.Companion.CHARS_UPPER"]},{"name":"constructor()","description":"io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.Base32CrockfordConfigBuilder","location":"library/base32/io.matthewnelson.encoding.base32/-base32-crockford-config-builder/-base32-crockford-config-builder.html","searchKeys":["Base32CrockfordConfigBuilder","constructor()","io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.Base32CrockfordConfigBuilder"]},{"name":"constructor()","description":"io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.Base32DefaultConfigBuilder","location":"library/base32/io.matthewnelson.encoding.base32/-base32-default-config-builder/-base32-default-config-builder.html","searchKeys":["Base32DefaultConfigBuilder","constructor()","io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.Base32DefaultConfigBuilder"]},{"name":"constructor()","description":"io.matthewnelson.encoding.base32.Base32HexConfigBuilder.Base32HexConfigBuilder","location":"library/base32/io.matthewnelson.encoding.base32/-base32-hex-config-builder/-base32-hex-config-builder.html","searchKeys":["Base32HexConfigBuilder","constructor()","io.matthewnelson.encoding.base32.Base32HexConfigBuilder.Base32HexConfigBuilder"]},{"name":"constructor(config: Base32.Crockford.Config)","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Crockford","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-crockford.html","searchKeys":["Crockford","constructor(config: Base32.Crockford.Config)","io.matthewnelson.encoding.base32.Base32.Crockford.Crockford"]},{"name":"constructor(config: Base32.Crockford.Config?)","description":"io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.Base32CrockfordConfigBuilder","location":"library/base32/io.matthewnelson.encoding.base32/-base32-crockford-config-builder/-base32-crockford-config-builder.html","searchKeys":["Base32CrockfordConfigBuilder","constructor(config: Base32.Crockford.Config?)","io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.Base32CrockfordConfigBuilder"]},{"name":"constructor(config: Base32.Default.Config)","description":"io.matthewnelson.encoding.base32.Base32.Default.Default","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/-default.html","searchKeys":["Default","constructor(config: Base32.Default.Config)","io.matthewnelson.encoding.base32.Base32.Default.Default"]},{"name":"constructor(config: Base32.Default.Config?)","description":"io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.Base32DefaultConfigBuilder","location":"library/base32/io.matthewnelson.encoding.base32/-base32-default-config-builder/-base32-default-config-builder.html","searchKeys":["Base32DefaultConfigBuilder","constructor(config: Base32.Default.Config?)","io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.Base32DefaultConfigBuilder"]},{"name":"constructor(config: Base32.Hex.Config)","description":"io.matthewnelson.encoding.base32.Base32.Hex.Hex","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/-hex.html","searchKeys":["Hex","constructor(config: Base32.Hex.Config)","io.matthewnelson.encoding.base32.Base32.Hex.Hex"]},{"name":"constructor(config: Base32.Hex.Config?)","description":"io.matthewnelson.encoding.base32.Base32HexConfigBuilder.Base32HexConfigBuilder","location":"library/base32/io.matthewnelson.encoding.base32/-base32-hex-config-builder/-base32-hex-config-builder.html","searchKeys":["Base32HexConfigBuilder","constructor(config: Base32.Hex.Config?)","io.matthewnelson.encoding.base32.Base32HexConfigBuilder.Base32HexConfigBuilder"]},{"name":"fun Base32Crockford(block: Base32CrockfordConfigBuilder.() -> Unit): Base32.Crockford","description":"io.matthewnelson.encoding.base32.Base32Crockford","location":"library/base32/io.matthewnelson.encoding.base32/-base32-crockford.html","searchKeys":["Base32Crockford","fun Base32Crockford(block: Base32CrockfordConfigBuilder.() -> Unit): Base32.Crockford","io.matthewnelson.encoding.base32.Base32Crockford"]},{"name":"fun Base32Crockford(config: Base32.Crockford.Config?, block: Base32CrockfordConfigBuilder.() -> Unit): Base32.Crockford","description":"io.matthewnelson.encoding.base32.Base32Crockford","location":"library/base32/io.matthewnelson.encoding.base32/-base32-crockford.html","searchKeys":["Base32Crockford","fun Base32Crockford(config: Base32.Crockford.Config?, block: Base32CrockfordConfigBuilder.() -> Unit): Base32.Crockford","io.matthewnelson.encoding.base32.Base32Crockford"]},{"name":"fun Base32Crockford(strict: Boolean = false): Base32.Crockford","description":"io.matthewnelson.encoding.base32.Base32Crockford","location":"library/base32/io.matthewnelson.encoding.base32/-base32-crockford.html","searchKeys":["Base32Crockford","fun Base32Crockford(strict: Boolean = false): Base32.Crockford","io.matthewnelson.encoding.base32.Base32Crockford"]},{"name":"fun Base32Default(block: Base32DefaultConfigBuilder.() -> Unit): Base32.Default","description":"io.matthewnelson.encoding.base32.Base32Default","location":"library/base32/io.matthewnelson.encoding.base32/-base32-default.html","searchKeys":["Base32Default","fun Base32Default(block: Base32DefaultConfigBuilder.() -> Unit): Base32.Default","io.matthewnelson.encoding.base32.Base32Default"]},{"name":"fun Base32Default(config: Base32.Default.Config?, block: Base32DefaultConfigBuilder.() -> Unit): Base32.Default","description":"io.matthewnelson.encoding.base32.Base32Default","location":"library/base32/io.matthewnelson.encoding.base32/-base32-default.html","searchKeys":["Base32Default","fun Base32Default(config: Base32.Default.Config?, block: Base32DefaultConfigBuilder.() -> Unit): Base32.Default","io.matthewnelson.encoding.base32.Base32Default"]},{"name":"fun Base32Default(strict: Boolean = false): Base32.Default","description":"io.matthewnelson.encoding.base32.Base32Default","location":"library/base32/io.matthewnelson.encoding.base32/-base32-default.html","searchKeys":["Base32Default","fun Base32Default(strict: Boolean = false): Base32.Default","io.matthewnelson.encoding.base32.Base32Default"]},{"name":"fun Base32Hex(block: Base32HexConfigBuilder.() -> Unit): Base32.Hex","description":"io.matthewnelson.encoding.base32.Base32Hex","location":"library/base32/io.matthewnelson.encoding.base32/-base32-hex.html","searchKeys":["Base32Hex","fun Base32Hex(block: Base32HexConfigBuilder.() -> Unit): Base32.Hex","io.matthewnelson.encoding.base32.Base32Hex"]},{"name":"fun Base32Hex(config: Base32.Hex.Config?, block: Base32HexConfigBuilder.() -> Unit): Base32.Hex","description":"io.matthewnelson.encoding.base32.Base32Hex","location":"library/base32/io.matthewnelson.encoding.base32/-base32-hex.html","searchKeys":["Base32Hex","fun Base32Hex(config: Base32.Hex.Config?, block: Base32HexConfigBuilder.() -> Unit): Base32.Hex","io.matthewnelson.encoding.base32.Base32Hex"]},{"name":"fun Base32Hex(strict: Boolean = false): Base32.Hex","description":"io.matthewnelson.encoding.base32.Base32Hex","location":"library/base32/io.matthewnelson.encoding.base32/-base32-hex.html","searchKeys":["Base32Hex","fun Base32Hex(strict: Boolean = false): Base32.Hex","io.matthewnelson.encoding.base32.Base32Hex"]},{"name":"fun build(): Base32.Crockford.Config","description":"io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.build","location":"library/base32/io.matthewnelson.encoding.base32/-base32-crockford-config-builder/build.html","searchKeys":["build","fun build(): Base32.Crockford.Config","io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.build"]},{"name":"fun build(): Base32.Default.Config","description":"io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.build","location":"library/base32/io.matthewnelson.encoding.base32/-base32-default-config-builder/build.html","searchKeys":["build","fun build(): Base32.Default.Config","io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.build"]},{"name":"fun build(): Base32.Hex.Config","description":"io.matthewnelson.encoding.base32.Base32HexConfigBuilder.build","location":"library/base32/io.matthewnelson.encoding.base32/-base32-hex-config-builder/build.html","searchKeys":["build","fun build(): Base32.Hex.Config","io.matthewnelson.encoding.base32.Base32HexConfigBuilder.build"]},{"name":"fun checkSymbol(symbol: Char?): Base32CrockfordConfigBuilder","description":"io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.checkSymbol","location":"library/base32/io.matthewnelson.encoding.base32/-base32-crockford-config-builder/check-symbol.html","searchKeys":["checkSymbol","fun checkSymbol(symbol: Char?): Base32CrockfordConfigBuilder","io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.checkSymbol"]},{"name":"fun strict(): Base32CrockfordConfigBuilder","description":"io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.strict","location":"library/base32/io.matthewnelson.encoding.base32/-base32-crockford-config-builder/strict.html","searchKeys":["strict","fun strict(): Base32CrockfordConfigBuilder","io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.strict"]},{"name":"fun strict(): Base32DefaultConfigBuilder","description":"io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.strict","location":"library/base32/io.matthewnelson.encoding.base32/-base32-default-config-builder/strict.html","searchKeys":["strict","fun strict(): Base32DefaultConfigBuilder","io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.strict"]},{"name":"fun strict(): Base32HexConfigBuilder","description":"io.matthewnelson.encoding.base32.Base32HexConfigBuilder.strict","location":"library/base32/io.matthewnelson.encoding.base32/-base32-hex-config-builder/strict.html","searchKeys":["strict","fun strict(): Base32HexConfigBuilder","io.matthewnelson.encoding.base32.Base32HexConfigBuilder.strict"]},{"name":"object Companion : EncoderDecoder<Base32.Crockford.Config> ","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Companion","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-companion/index.html","searchKeys":["Companion","object Companion : EncoderDecoder<Base32.Crockford.Config> ","io.matthewnelson.encoding.base32.Base32.Crockford.Companion"]},{"name":"object Companion : EncoderDecoder<Base32.Default.Config> ","description":"io.matthewnelson.encoding.base32.Base32.Default.Companion","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/-companion/index.html","searchKeys":["Companion","object Companion : EncoderDecoder<Base32.Default.Config> ","io.matthewnelson.encoding.base32.Base32.Default.Companion"]},{"name":"object Companion : EncoderDecoder<Base32.Hex.Config> ","description":"io.matthewnelson.encoding.base32.Base32.Hex.Companion","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/-companion/index.html","searchKeys":["Companion","object Companion : EncoderDecoder<Base32.Hex.Config> ","io.matthewnelson.encoding.base32.Base32.Hex.Companion"]},{"name":"protected constructor(config: C)","description":"io.matthewnelson.encoding.base32.Base32.Base32","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-base32.html","searchKeys":["Base32","protected constructor(config: C)","io.matthewnelson.encoding.base32.Base32.Base32"]},{"name":"protected open override fun decodeOutMaxSizeOrFailProtected(encodedSize: Int, input: DecoderInput): Int","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Config.decodeOutMaxSizeOrFailProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-config/decode-out-max-size-or-fail-protected.html","searchKeys":["decodeOutMaxSizeOrFailProtected","protected open override fun decodeOutMaxSizeOrFailProtected(encodedSize: Int, input: DecoderInput): Int","io.matthewnelson.encoding.base32.Base32.Crockford.Config.decodeOutMaxSizeOrFailProtected"]},{"name":"protected open override fun decodeOutMaxSizeOrFailProtected(encodedSize: Int, input: DecoderInput): Int","description":"io.matthewnelson.encoding.base32.Base32.Default.Config.decodeOutMaxSizeOrFailProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/-config/decode-out-max-size-or-fail-protected.html","searchKeys":["decodeOutMaxSizeOrFailProtected","protected open override fun decodeOutMaxSizeOrFailProtected(encodedSize: Int, input: DecoderInput): Int","io.matthewnelson.encoding.base32.Base32.Default.Config.decodeOutMaxSizeOrFailProtected"]},{"name":"protected open override fun decodeOutMaxSizeOrFailProtected(encodedSize: Int, input: DecoderInput): Int","description":"io.matthewnelson.encoding.base32.Base32.Hex.Config.decodeOutMaxSizeOrFailProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/-config/decode-out-max-size-or-fail-protected.html","searchKeys":["decodeOutMaxSizeOrFailProtected","protected open override fun decodeOutMaxSizeOrFailProtected(encodedSize: Int, input: DecoderInput): Int","io.matthewnelson.encoding.base32.Base32.Hex.Config.decodeOutMaxSizeOrFailProtected"]},{"name":"protected open override fun decodeOutMaxSizeProtected(encodedSize: Long): Long","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Config.decodeOutMaxSizeProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-config/decode-out-max-size-protected.html","searchKeys":["decodeOutMaxSizeProtected","protected open override fun decodeOutMaxSizeProtected(encodedSize: Long): Long","io.matthewnelson.encoding.base32.Base32.Crockford.Config.decodeOutMaxSizeProtected"]},{"name":"protected open override fun decodeOutMaxSizeProtected(encodedSize: Long): Long","description":"io.matthewnelson.encoding.base32.Base32.Default.Config.decodeOutMaxSizeProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/-config/decode-out-max-size-protected.html","searchKeys":["decodeOutMaxSizeProtected","protected open override fun decodeOutMaxSizeProtected(encodedSize: Long): Long","io.matthewnelson.encoding.base32.Base32.Default.Config.decodeOutMaxSizeProtected"]},{"name":"protected open override fun decodeOutMaxSizeProtected(encodedSize: Long): Long","description":"io.matthewnelson.encoding.base32.Base32.Hex.Config.decodeOutMaxSizeProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/-config/decode-out-max-size-protected.html","searchKeys":["decodeOutMaxSizeProtected","protected open override fun decodeOutMaxSizeProtected(encodedSize: Long): Long","io.matthewnelson.encoding.base32.Base32.Hex.Config.decodeOutMaxSizeProtected"]},{"name":"protected open override fun encodeOutSizeProtected(unEncodedSize: Long): Long","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Config.encodeOutSizeProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-config/encode-out-size-protected.html","searchKeys":["encodeOutSizeProtected","protected open override fun encodeOutSizeProtected(unEncodedSize: Long): Long","io.matthewnelson.encoding.base32.Base32.Crockford.Config.encodeOutSizeProtected"]},{"name":"protected open override fun encodeOutSizeProtected(unEncodedSize: Long): Long","description":"io.matthewnelson.encoding.base32.Base32.Default.Config.encodeOutSizeProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/-config/encode-out-size-protected.html","searchKeys":["encodeOutSizeProtected","protected open override fun encodeOutSizeProtected(unEncodedSize: Long): Long","io.matthewnelson.encoding.base32.Base32.Default.Config.encodeOutSizeProtected"]},{"name":"protected open override fun encodeOutSizeProtected(unEncodedSize: Long): Long","description":"io.matthewnelson.encoding.base32.Base32.Hex.Config.encodeOutSizeProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/-config/encode-out-size-protected.html","searchKeys":["encodeOutSizeProtected","protected open override fun encodeOutSizeProtected(unEncodedSize: Long): Long","io.matthewnelson.encoding.base32.Base32.Hex.Config.encodeOutSizeProtected"]},{"name":"protected open override fun name(): String","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Companion.name","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-companion/name.html","searchKeys":["name","protected open override fun name(): String","io.matthewnelson.encoding.base32.Base32.Crockford.Companion.name"]},{"name":"protected open override fun name(): String","description":"io.matthewnelson.encoding.base32.Base32.Crockford.name","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/name.html","searchKeys":["name","protected open override fun name(): String","io.matthewnelson.encoding.base32.Base32.Crockford.name"]},{"name":"protected open override fun name(): String","description":"io.matthewnelson.encoding.base32.Base32.Default.Companion.name","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/-companion/name.html","searchKeys":["name","protected open override fun name(): String","io.matthewnelson.encoding.base32.Base32.Default.Companion.name"]},{"name":"protected open override fun name(): String","description":"io.matthewnelson.encoding.base32.Base32.Default.name","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/name.html","searchKeys":["name","protected open override fun name(): String","io.matthewnelson.encoding.base32.Base32.Default.name"]},{"name":"protected open override fun name(): String","description":"io.matthewnelson.encoding.base32.Base32.Hex.Companion.name","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/-companion/name.html","searchKeys":["name","protected open override fun name(): String","io.matthewnelson.encoding.base32.Base32.Hex.Companion.name"]},{"name":"protected open override fun name(): String","description":"io.matthewnelson.encoding.base32.Base32.Hex.name","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/name.html","searchKeys":["name","protected open override fun name(): String","io.matthewnelson.encoding.base32.Base32.Hex.name"]},{"name":"protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base32.Crockford.Config>","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Companion.newDecoderFeedProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-companion/new-decoder-feed-protected.html","searchKeys":["newDecoderFeedProtected","protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base32.Crockford.Config>","io.matthewnelson.encoding.base32.Base32.Crockford.Companion.newDecoderFeedProtected"]},{"name":"protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base32.Crockford.Config>","description":"io.matthewnelson.encoding.base32.Base32.Crockford.newDecoderFeedProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/new-decoder-feed-protected.html","searchKeys":["newDecoderFeedProtected","protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base32.Crockford.Config>","io.matthewnelson.encoding.base32.Base32.Crockford.newDecoderFeedProtected"]},{"name":"protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base32.Default.Config>","description":"io.matthewnelson.encoding.base32.Base32.Default.Companion.newDecoderFeedProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/-companion/new-decoder-feed-protected.html","searchKeys":["newDecoderFeedProtected","protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base32.Default.Config>","io.matthewnelson.encoding.base32.Base32.Default.Companion.newDecoderFeedProtected"]},{"name":"protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base32.Default.Config>","description":"io.matthewnelson.encoding.base32.Base32.Default.newDecoderFeedProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/new-decoder-feed-protected.html","searchKeys":["newDecoderFeedProtected","protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base32.Default.Config>","io.matthewnelson.encoding.base32.Base32.Default.newDecoderFeedProtected"]},{"name":"protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base32.Hex.Config>","description":"io.matthewnelson.encoding.base32.Base32.Hex.Companion.newDecoderFeedProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/-companion/new-decoder-feed-protected.html","searchKeys":["newDecoderFeedProtected","protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base32.Hex.Config>","io.matthewnelson.encoding.base32.Base32.Hex.Companion.newDecoderFeedProtected"]},{"name":"protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base32.Hex.Config>","description":"io.matthewnelson.encoding.base32.Base32.Hex.newDecoderFeedProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/new-decoder-feed-protected.html","searchKeys":["newDecoderFeedProtected","protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base32.Hex.Config>","io.matthewnelson.encoding.base32.Base32.Hex.newDecoderFeedProtected"]},{"name":"protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base32.Crockford.Config>","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Companion.newEncoderFeedProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-companion/new-encoder-feed-protected.html","searchKeys":["newEncoderFeedProtected","protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base32.Crockford.Config>","io.matthewnelson.encoding.base32.Base32.Crockford.Companion.newEncoderFeedProtected"]},{"name":"protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base32.Crockford.Config>","description":"io.matthewnelson.encoding.base32.Base32.Crockford.newEncoderFeedProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/new-encoder-feed-protected.html","searchKeys":["newEncoderFeedProtected","protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base32.Crockford.Config>","io.matthewnelson.encoding.base32.Base32.Crockford.newEncoderFeedProtected"]},{"name":"protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base32.Default.Config>","description":"io.matthewnelson.encoding.base32.Base32.Default.Companion.newEncoderFeedProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/-companion/new-encoder-feed-protected.html","searchKeys":["newEncoderFeedProtected","protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base32.Default.Config>","io.matthewnelson.encoding.base32.Base32.Default.Companion.newEncoderFeedProtected"]},{"name":"protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base32.Default.Config>","description":"io.matthewnelson.encoding.base32.Base32.Default.newEncoderFeedProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/new-encoder-feed-protected.html","searchKeys":["newEncoderFeedProtected","protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base32.Default.Config>","io.matthewnelson.encoding.base32.Base32.Default.newEncoderFeedProtected"]},{"name":"protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base32.Hex.Config>","description":"io.matthewnelson.encoding.base32.Base32.Hex.Companion.newEncoderFeedProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/-companion/new-encoder-feed-protected.html","searchKeys":["newEncoderFeedProtected","protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base32.Hex.Config>","io.matthewnelson.encoding.base32.Base32.Hex.Companion.newEncoderFeedProtected"]},{"name":"protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base32.Hex.Config>","description":"io.matthewnelson.encoding.base32.Base32.Hex.newEncoderFeedProtected","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/new-encoder-feed-protected.html","searchKeys":["newEncoderFeedProtected","protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base32.Hex.Config>","io.matthewnelson.encoding.base32.Base32.Hex.newEncoderFeedProtected"]},{"name":"protected open override fun toStringAddSettings(): Set<EncoderDecoder.Config.Setting>","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Config.toStringAddSettings","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-config/to-string-add-settings.html","searchKeys":["toStringAddSettings","protected open override fun toStringAddSettings(): Set<EncoderDecoder.Config.Setting>","io.matthewnelson.encoding.base32.Base32.Crockford.Config.toStringAddSettings"]},{"name":"protected open override fun toStringAddSettings(): Set<EncoderDecoder.Config.Setting>","description":"io.matthewnelson.encoding.base32.Base32.Default.Config.toStringAddSettings","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/-config/to-string-add-settings.html","searchKeys":["toStringAddSettings","protected open override fun toStringAddSettings(): Set<EncoderDecoder.Config.Setting>","io.matthewnelson.encoding.base32.Base32.Default.Config.toStringAddSettings"]},{"name":"protected open override fun toStringAddSettings(): Set<EncoderDecoder.Config.Setting>","description":"io.matthewnelson.encoding.base32.Base32.Hex.Config.toStringAddSettings","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/-config/to-string-add-settings.html","searchKeys":["toStringAddSettings","protected open override fun toStringAddSettings(): Set<EncoderDecoder.Config.Setting>","io.matthewnelson.encoding.base32.Base32.Hex.Config.toStringAddSettings"]},{"name":"sealed class Base32<C : EncoderDecoder.Config>(config: C) : EncoderDecoder<C> ","description":"io.matthewnelson.encoding.base32.Base32","location":"library/base32/io.matthewnelson.encoding.base32/-base32/index.html","searchKeys":["Base32","sealed class Base32<C : EncoderDecoder.Config>(config: C) : EncoderDecoder<C> ","io.matthewnelson.encoding.base32.Base32"]},{"name":"val checkSymbol: Char?","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Config.checkSymbol","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-config/check-symbol.html","searchKeys":["checkSymbol","val checkSymbol: Char?","io.matthewnelson.encoding.base32.Base32.Crockford.Config.checkSymbol"]},{"name":"val encodeToLowercase: Boolean","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Config.encodeToLowercase","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-config/encode-to-lowercase.html","searchKeys":["encodeToLowercase","val encodeToLowercase: Boolean","io.matthewnelson.encoding.base32.Base32.Crockford.Config.encodeToLowercase"]},{"name":"val encodeToLowercase: Boolean","description":"io.matthewnelson.encoding.base32.Base32.Default.Config.encodeToLowercase","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/-config/encode-to-lowercase.html","searchKeys":["encodeToLowercase","val encodeToLowercase: Boolean","io.matthewnelson.encoding.base32.Base32.Default.Config.encodeToLowercase"]},{"name":"val encodeToLowercase: Boolean","description":"io.matthewnelson.encoding.base32.Base32.Hex.Config.encodeToLowercase","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/-config/encode-to-lowercase.html","searchKeys":["encodeToLowercase","val encodeToLowercase: Boolean","io.matthewnelson.encoding.base32.Base32.Hex.Config.encodeToLowercase"]},{"name":"val finalizeWhenFlushed: Boolean","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Config.finalizeWhenFlushed","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-config/finalize-when-flushed.html","searchKeys":["finalizeWhenFlushed","val finalizeWhenFlushed: Boolean","io.matthewnelson.encoding.base32.Base32.Crockford.Config.finalizeWhenFlushed"]},{"name":"val hyphenInterval: Byte","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Config.hyphenInterval","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-config/hyphen-interval.html","searchKeys":["hyphenInterval","val hyphenInterval: Byte","io.matthewnelson.encoding.base32.Base32.Crockford.Config.hyphenInterval"]},{"name":"val isConstantTime: Boolean","description":"io.matthewnelson.encoding.base32.Base32.Crockford.Config.isConstantTime","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-crockford/-config/is-constant-time.html","searchKeys":["isConstantTime","val isConstantTime: Boolean","io.matthewnelson.encoding.base32.Base32.Crockford.Config.isConstantTime"]},{"name":"val isConstantTime: Boolean","description":"io.matthewnelson.encoding.base32.Base32.Default.Config.isConstantTime","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/-config/is-constant-time.html","searchKeys":["isConstantTime","val isConstantTime: Boolean","io.matthewnelson.encoding.base32.Base32.Default.Config.isConstantTime"]},{"name":"val isConstantTime: Boolean","description":"io.matthewnelson.encoding.base32.Base32.Hex.Config.isConstantTime","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/-config/is-constant-time.html","searchKeys":["isConstantTime","val isConstantTime: Boolean","io.matthewnelson.encoding.base32.Base32.Hex.Config.isConstantTime"]},{"name":"val padEncoded: Boolean","description":"io.matthewnelson.encoding.base32.Base32.Default.Config.padEncoded","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-default/-config/pad-encoded.html","searchKeys":["padEncoded","val padEncoded: Boolean","io.matthewnelson.encoding.base32.Base32.Default.Config.padEncoded"]},{"name":"val padEncoded: Boolean","description":"io.matthewnelson.encoding.base32.Base32.Hex.Config.padEncoded","location":"library/base32/io.matthewnelson.encoding.base32/-base32/-hex/-config/pad-encoded.html","searchKeys":["padEncoded","val padEncoded: Boolean","io.matthewnelson.encoding.base32.Base32.Hex.Config.padEncoded"]},{"name":"var checkSymbol: Char?","description":"io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.checkSymbol","location":"library/base32/io.matthewnelson.encoding.base32/-base32-crockford-config-builder/check-symbol.html","searchKeys":["checkSymbol","var checkSymbol: Char?","io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.checkSymbol"]},{"name":"var encodeToLowercase: Boolean","description":"io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.encodeToLowercase","location":"library/base32/io.matthewnelson.encoding.base32/-base32-crockford-config-builder/encode-to-lowercase.html","searchKeys":["encodeToLowercase","var encodeToLowercase: Boolean","io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.encodeToLowercase"]},{"name":"var encodeToLowercase: Boolean","description":"io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.encodeToLowercase","location":"library/base32/io.matthewnelson.encoding.base32/-base32-default-config-builder/encode-to-lowercase.html","searchKeys":["encodeToLowercase","var encodeToLowercase: Boolean","io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.encodeToLowercase"]},{"name":"var encodeToLowercase: Boolean","description":"io.matthewnelson.encoding.base32.Base32HexConfigBuilder.encodeToLowercase","location":"library/base32/io.matthewnelson.encoding.base32/-base32-hex-config-builder/encode-to-lowercase.html","searchKeys":["encodeToLowercase","var encodeToLowercase: Boolean","io.matthewnelson.encoding.base32.Base32HexConfigBuilder.encodeToLowercase"]},{"name":"var finalizeWhenFlushed: Boolean","description":"io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.finalizeWhenFlushed","location":"library/base32/io.matthewnelson.encoding.base32/-base32-crockford-config-builder/finalize-when-flushed.html","searchKeys":["finalizeWhenFlushed","var finalizeWhenFlushed: Boolean","io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.finalizeWhenFlushed"]},{"name":"var hyphenInterval: Byte","description":"io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.hyphenInterval","location":"library/base32/io.matthewnelson.encoding.base32/-base32-crockford-config-builder/hyphen-interval.html","searchKeys":["hyphenInterval","var hyphenInterval: Byte","io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.hyphenInterval"]},{"name":"var isConstantTime: Boolean","description":"io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.isConstantTime","location":"library/base32/io.matthewnelson.encoding.base32/-base32-crockford-config-builder/is-constant-time.html","searchKeys":["isConstantTime","var isConstantTime: Boolean","io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.isConstantTime"]},{"name":"var isConstantTime: Boolean","description":"io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.isConstantTime","location":"library/base32/io.matthewnelson.encoding.base32/-base32-default-config-builder/is-constant-time.html","searchKeys":["isConstantTime","var isConstantTime: Boolean","io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.isConstantTime"]},{"name":"var isConstantTime: Boolean","description":"io.matthewnelson.encoding.base32.Base32HexConfigBuilder.isConstantTime","location":"library/base32/io.matthewnelson.encoding.base32/-base32-hex-config-builder/is-constant-time.html","searchKeys":["isConstantTime","var isConstantTime: Boolean","io.matthewnelson.encoding.base32.Base32HexConfigBuilder.isConstantTime"]},{"name":"var isLenient: Boolean","description":"io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.isLenient","location":"library/base32/io.matthewnelson.encoding.base32/-base32-crockford-config-builder/is-lenient.html","searchKeys":["isLenient","var isLenient: Boolean","io.matthewnelson.encoding.base32.Base32CrockfordConfigBuilder.isLenient"]},{"name":"var isLenient: Boolean","description":"io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.isLenient","location":"library/base32/io.matthewnelson.encoding.base32/-base32-default-config-builder/is-lenient.html","searchKeys":["isLenient","var isLenient: Boolean","io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.isLenient"]},{"name":"var isLenient: Boolean","description":"io.matthewnelson.encoding.base32.Base32HexConfigBuilder.isLenient","location":"library/base32/io.matthewnelson.encoding.base32/-base32-hex-config-builder/is-lenient.html","searchKeys":["isLenient","var isLenient: Boolean","io.matthewnelson.encoding.base32.Base32HexConfigBuilder.isLenient"]},{"name":"var lineBreakInterval: Byte","description":"io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.lineBreakInterval","location":"library/base32/io.matthewnelson.encoding.base32/-base32-default-config-builder/line-break-interval.html","searchKeys":["lineBreakInterval","var lineBreakInterval: Byte","io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.lineBreakInterval"]},{"name":"var lineBreakInterval: Byte","description":"io.matthewnelson.encoding.base32.Base32HexConfigBuilder.lineBreakInterval","location":"library/base32/io.matthewnelson.encoding.base32/-base32-hex-config-builder/line-break-interval.html","searchKeys":["lineBreakInterval","var lineBreakInterval: Byte","io.matthewnelson.encoding.base32.Base32HexConfigBuilder.lineBreakInterval"]},{"name":"var padEncoded: Boolean","description":"io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.padEncoded","location":"library/base32/io.matthewnelson.encoding.base32/-base32-default-config-builder/pad-encoded.html","searchKeys":["padEncoded","var padEncoded: Boolean","io.matthewnelson.encoding.base32.Base32DefaultConfigBuilder.padEncoded"]},{"name":"var padEncoded: Boolean","description":"io.matthewnelson.encoding.base32.Base32HexConfigBuilder.padEncoded","location":"library/base32/io.matthewnelson.encoding.base32/-base32-hex-config-builder/pad-encoded.html","searchKeys":["padEncoded","var padEncoded: Boolean","io.matthewnelson.encoding.base32.Base32HexConfigBuilder.padEncoded"]},{"name":"class Base64(config: Base64.Config) : EncoderDecoder<Base64.Config> ","description":"io.matthewnelson.encoding.base64.Base64","location":"library/base64/io.matthewnelson.encoding.base64/-base64/index.html","searchKeys":["Base64","class Base64(config: Base64.Config) : EncoderDecoder<Base64.Config> ","io.matthewnelson.encoding.base64.Base64"]},{"name":"class Base64ConfigBuilder","description":"io.matthewnelson.encoding.base64.Base64ConfigBuilder","location":"library/base64/io.matthewnelson.encoding.base64/-base64-config-builder/index.html","searchKeys":["Base64ConfigBuilder","class Base64ConfigBuilder","io.matthewnelson.encoding.base64.Base64ConfigBuilder"]},{"name":"class Config : EncoderDecoder.Config","description":"io.matthewnelson.encoding.base64.Base64.Config","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-config/index.html","searchKeys":["Config","class Config : EncoderDecoder.Config","io.matthewnelson.encoding.base64.Base64.Config"]},{"name":"const val CHARS: String","description":"io.matthewnelson.encoding.base64.Base64.Default.CHARS","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-default/-c-h-a-r-s.html","searchKeys":["CHARS","const val CHARS: String","io.matthewnelson.encoding.base64.Base64.Default.CHARS"]},{"name":"const val CHARS: String","description":"io.matthewnelson.encoding.base64.Base64.UrlSafe.CHARS","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-url-safe/-c-h-a-r-s.html","searchKeys":["CHARS","const val CHARS: String","io.matthewnelson.encoding.base64.Base64.UrlSafe.CHARS"]},{"name":"constructor()","description":"io.matthewnelson.encoding.base64.Base64ConfigBuilder.Base64ConfigBuilder","location":"library/base64/io.matthewnelson.encoding.base64/-base64-config-builder/-base64-config-builder.html","searchKeys":["Base64ConfigBuilder","constructor()","io.matthewnelson.encoding.base64.Base64ConfigBuilder.Base64ConfigBuilder"]},{"name":"constructor(config: Base64.Config)","description":"io.matthewnelson.encoding.base64.Base64.Base64","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-base64.html","searchKeys":["Base64","constructor(config: Base64.Config)","io.matthewnelson.encoding.base64.Base64.Base64"]},{"name":"constructor(config: Base64.Config?)","description":"io.matthewnelson.encoding.base64.Base64ConfigBuilder.Base64ConfigBuilder","location":"library/base64/io.matthewnelson.encoding.base64/-base64-config-builder/-base64-config-builder.html","searchKeys":["Base64ConfigBuilder","constructor(config: Base64.Config?)","io.matthewnelson.encoding.base64.Base64ConfigBuilder.Base64ConfigBuilder"]},{"name":"fun Base64(block: Base64ConfigBuilder.() -> Unit): Base64","description":"io.matthewnelson.encoding.base64.Base64","location":"library/base64/io.matthewnelson.encoding.base64/-base64.html","searchKeys":["Base64","fun Base64(block: Base64ConfigBuilder.() -> Unit): Base64","io.matthewnelson.encoding.base64.Base64"]},{"name":"fun Base64(config: Base64.Config?, block: Base64ConfigBuilder.() -> Unit): Base64","description":"io.matthewnelson.encoding.base64.Base64","location":"library/base64/io.matthewnelson.encoding.base64/-base64.html","searchKeys":["Base64","fun Base64(config: Base64.Config?, block: Base64ConfigBuilder.() -> Unit): Base64","io.matthewnelson.encoding.base64.Base64"]},{"name":"fun Base64(strict: Boolean = false): Base64","description":"io.matthewnelson.encoding.base64.Base64","location":"library/base64/io.matthewnelson.encoding.base64/-base64.html","searchKeys":["Base64","fun Base64(strict: Boolean = false): Base64","io.matthewnelson.encoding.base64.Base64"]},{"name":"fun build(): Base64.Config","description":"io.matthewnelson.encoding.base64.Base64ConfigBuilder.build","location":"library/base64/io.matthewnelson.encoding.base64/-base64-config-builder/build.html","searchKeys":["build","fun build(): Base64.Config","io.matthewnelson.encoding.base64.Base64ConfigBuilder.build"]},{"name":"fun strict(): Base64ConfigBuilder","description":"io.matthewnelson.encoding.base64.Base64ConfigBuilder.strict","location":"library/base64/io.matthewnelson.encoding.base64/-base64-config-builder/strict.html","searchKeys":["strict","fun strict(): Base64ConfigBuilder","io.matthewnelson.encoding.base64.Base64ConfigBuilder.strict"]},{"name":"object Default : EncoderDecoder<Base64.Config> ","description":"io.matthewnelson.encoding.base64.Base64.Default","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-default/index.html","searchKeys":["Default","object Default : EncoderDecoder<Base64.Config> ","io.matthewnelson.encoding.base64.Base64.Default"]},{"name":"object UrlSafe : EncoderDecoder<Base64.Config> ","description":"io.matthewnelson.encoding.base64.Base64.UrlSafe","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-url-safe/index.html","searchKeys":["UrlSafe","object UrlSafe : EncoderDecoder<Base64.Config> ","io.matthewnelson.encoding.base64.Base64.UrlSafe"]},{"name":"protected open override fun decodeOutMaxSizeOrFailProtected(encodedSize: Int, input: DecoderInput): Int","description":"io.matthewnelson.encoding.base64.Base64.Config.decodeOutMaxSizeOrFailProtected","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-config/decode-out-max-size-or-fail-protected.html","searchKeys":["decodeOutMaxSizeOrFailProtected","protected open override fun decodeOutMaxSizeOrFailProtected(encodedSize: Int, input: DecoderInput): Int","io.matthewnelson.encoding.base64.Base64.Config.decodeOutMaxSizeOrFailProtected"]},{"name":"protected open override fun decodeOutMaxSizeProtected(encodedSize: Long): Long","description":"io.matthewnelson.encoding.base64.Base64.Config.decodeOutMaxSizeProtected","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-config/decode-out-max-size-protected.html","searchKeys":["decodeOutMaxSizeProtected","protected open override fun decodeOutMaxSizeProtected(encodedSize: Long): Long","io.matthewnelson.encoding.base64.Base64.Config.decodeOutMaxSizeProtected"]},{"name":"protected open override fun encodeOutSizeProtected(unEncodedSize: Long): Long","description":"io.matthewnelson.encoding.base64.Base64.Config.encodeOutSizeProtected","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-config/encode-out-size-protected.html","searchKeys":["encodeOutSizeProtected","protected open override fun encodeOutSizeProtected(unEncodedSize: Long): Long","io.matthewnelson.encoding.base64.Base64.Config.encodeOutSizeProtected"]},{"name":"protected open override fun name(): String","description":"io.matthewnelson.encoding.base64.Base64.Default.name","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-default/name.html","searchKeys":["name","protected open override fun name(): String","io.matthewnelson.encoding.base64.Base64.Default.name"]},{"name":"protected open override fun name(): String","description":"io.matthewnelson.encoding.base64.Base64.UrlSafe.name","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-url-safe/name.html","searchKeys":["name","protected open override fun name(): String","io.matthewnelson.encoding.base64.Base64.UrlSafe.name"]},{"name":"protected open override fun name(): String","description":"io.matthewnelson.encoding.base64.Base64.name","location":"library/base64/io.matthewnelson.encoding.base64/-base64/name.html","searchKeys":["name","protected open override fun name(): String","io.matthewnelson.encoding.base64.Base64.name"]},{"name":"protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base64.Config>","description":"io.matthewnelson.encoding.base64.Base64.Default.newDecoderFeedProtected","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-default/new-decoder-feed-protected.html","searchKeys":["newDecoderFeedProtected","protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base64.Config>","io.matthewnelson.encoding.base64.Base64.Default.newDecoderFeedProtected"]},{"name":"protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base64.Config>","description":"io.matthewnelson.encoding.base64.Base64.UrlSafe.newDecoderFeedProtected","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-url-safe/new-decoder-feed-protected.html","searchKeys":["newDecoderFeedProtected","protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base64.Config>","io.matthewnelson.encoding.base64.Base64.UrlSafe.newDecoderFeedProtected"]},{"name":"protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base64.Config>","description":"io.matthewnelson.encoding.base64.Base64.newDecoderFeedProtected","location":"library/base64/io.matthewnelson.encoding.base64/-base64/new-decoder-feed-protected.html","searchKeys":["newDecoderFeedProtected","protected open override fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<Base64.Config>","io.matthewnelson.encoding.base64.Base64.newDecoderFeedProtected"]},{"name":"protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base64.Config>","description":"io.matthewnelson.encoding.base64.Base64.Default.newEncoderFeedProtected","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-default/new-encoder-feed-protected.html","searchKeys":["newEncoderFeedProtected","protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base64.Config>","io.matthewnelson.encoding.base64.Base64.Default.newEncoderFeedProtected"]},{"name":"protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base64.Config>","description":"io.matthewnelson.encoding.base64.Base64.UrlSafe.newEncoderFeedProtected","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-url-safe/new-encoder-feed-protected.html","searchKeys":["newEncoderFeedProtected","protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base64.Config>","io.matthewnelson.encoding.base64.Base64.UrlSafe.newEncoderFeedProtected"]},{"name":"protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base64.Config>","description":"io.matthewnelson.encoding.base64.Base64.newEncoderFeedProtected","location":"library/base64/io.matthewnelson.encoding.base64/-base64/new-encoder-feed-protected.html","searchKeys":["newEncoderFeedProtected","protected open override fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<Base64.Config>","io.matthewnelson.encoding.base64.Base64.newEncoderFeedProtected"]},{"name":"protected open override fun toStringAddSettings(): Set<EncoderDecoder.Config.Setting>","description":"io.matthewnelson.encoding.base64.Base64.Config.toStringAddSettings","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-config/to-string-add-settings.html","searchKeys":["toStringAddSettings","protected open override fun toStringAddSettings(): Set<EncoderDecoder.Config.Setting>","io.matthewnelson.encoding.base64.Base64.Config.toStringAddSettings"]},{"name":"val encodeToUrlSafe: Boolean","description":"io.matthewnelson.encoding.base64.Base64.Config.encodeToUrlSafe","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-config/encode-to-url-safe.html","searchKeys":["encodeToUrlSafe","val encodeToUrlSafe: Boolean","io.matthewnelson.encoding.base64.Base64.Config.encodeToUrlSafe"]},{"name":"val isConstantTime: Boolean","description":"io.matthewnelson.encoding.base64.Base64.Config.isConstantTime","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-config/is-constant-time.html","searchKeys":["isConstantTime","val isConstantTime: Boolean","io.matthewnelson.encoding.base64.Base64.Config.isConstantTime"]},{"name":"val padEncoded: Boolean","description":"io.matthewnelson.encoding.base64.Base64.Config.padEncoded","location":"library/base64/io.matthewnelson.encoding.base64/-base64/-config/pad-encoded.html","searchKeys":["padEncoded","val padEncoded: Boolean","io.matthewnelson.encoding.base64.Base64.Config.padEncoded"]},{"name":"var encodeToUrlSafe: Boolean","description":"io.matthewnelson.encoding.base64.Base64ConfigBuilder.encodeToUrlSafe","location":"library/base64/io.matthewnelson.encoding.base64/-base64-config-builder/encode-to-url-safe.html","searchKeys":["encodeToUrlSafe","var encodeToUrlSafe: Boolean","io.matthewnelson.encoding.base64.Base64ConfigBuilder.encodeToUrlSafe"]},{"name":"var isConstantTime: Boolean","description":"io.matthewnelson.encoding.base64.Base64ConfigBuilder.isConstantTime","location":"library/base64/io.matthewnelson.encoding.base64/-base64-config-builder/is-constant-time.html","searchKeys":["isConstantTime","var isConstantTime: Boolean","io.matthewnelson.encoding.base64.Base64ConfigBuilder.isConstantTime"]},{"name":"var isLenient: Boolean","description":"io.matthewnelson.encoding.base64.Base64ConfigBuilder.isLenient","location":"library/base64/io.matthewnelson.encoding.base64/-base64-config-builder/is-lenient.html","searchKeys":["isLenient","var isLenient: Boolean","io.matthewnelson.encoding.base64.Base64ConfigBuilder.isLenient"]},{"name":"var lineBreakInterval: Byte","description":"io.matthewnelson.encoding.base64.Base64ConfigBuilder.lineBreakInterval","location":"library/base64/io.matthewnelson.encoding.base64/-base64-config-builder/line-break-interval.html","searchKeys":["lineBreakInterval","var lineBreakInterval: Byte","io.matthewnelson.encoding.base64.Base64ConfigBuilder.lineBreakInterval"]},{"name":"var padEncoded: Boolean","description":"io.matthewnelson.encoding.base64.Base64ConfigBuilder.padEncoded","location":"library/base64/io.matthewnelson.encoding.base64/-base64-config-builder/pad-encoded.html","searchKeys":["padEncoded","var padEncoded: Boolean","io.matthewnelson.encoding.base64.Base64ConfigBuilder.padEncoded"]},{"name":"abstract class Config(val isLenient: Boolean?, lineBreakInterval: Byte, val paddingChar: Char?)","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/index.html","searchKeys":["Config","abstract class Config(val isLenient: Boolean?, lineBreakInterval: Byte, val paddingChar: Char?)","io.matthewnelson.encoding.core.EncoderDecoder.Config"]},{"name":"abstract class EncoderDecoder<C : EncoderDecoder.Config>(config: C) : Encoder<C> ","description":"io.matthewnelson.encoding.core.EncoderDecoder","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/index.html","searchKeys":["EncoderDecoder","abstract class EncoderDecoder<C : EncoderDecoder.Config>(config: C) : Encoder<C> ","io.matthewnelson.encoding.core.EncoderDecoder"]},{"name":"abstract class FeedBuffer constructor(val blockSize: Int, flush: FeedBuffer.Flush, finalize: FeedBuffer.Finalize)","description":"io.matthewnelson.encoding.core.util.FeedBuffer","location":"library/core/io.matthewnelson.encoding.core.util/-feed-buffer/index.html","searchKeys":["FeedBuffer","abstract class FeedBuffer constructor(val blockSize: Int, flush: FeedBuffer.Flush, finalize: FeedBuffer.Finalize)","io.matthewnelson.encoding.core.util.FeedBuffer"]},{"name":"abstract fun close()","description":"io.matthewnelson.encoding.core.EncoderDecoder.Feed.close","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-feed/close.html","searchKeys":["close","abstract fun close()","io.matthewnelson.encoding.core.EncoderDecoder.Feed.close"]},{"name":"abstract fun convert(input: Char): Int","description":"io.matthewnelson.encoding.core.util.DecoderAction.convert","location":"library/core/io.matthewnelson.encoding.core.util/-decoder-action/convert.html","searchKeys":["convert","abstract fun convert(input: Char): Int","io.matthewnelson.encoding.core.util.DecoderAction.convert"]},{"name":"abstract fun flush()","description":"io.matthewnelson.encoding.core.EncoderDecoder.Feed.flush","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-feed/flush.html","searchKeys":["flush","abstract fun flush()","io.matthewnelson.encoding.core.EncoderDecoder.Feed.flush"]},{"name":"abstract fun invoke(buffer: IntArray)","description":"io.matthewnelson.encoding.core.util.FeedBuffer.Flush.invoke","location":"library/core/io.matthewnelson.encoding.core.util/-feed-buffer/-flush/invoke.html","searchKeys":["invoke","abstract fun invoke(buffer: IntArray)","io.matthewnelson.encoding.core.util.FeedBuffer.Flush.invoke"]},{"name":"abstract fun invoke(modulus: Int, buffer: IntArray)","description":"io.matthewnelson.encoding.core.util.FeedBuffer.Finalize.invoke","location":"library/core/io.matthewnelson.encoding.core.util/-feed-buffer/-finalize/invoke.html","searchKeys":["invoke","abstract fun invoke(modulus: Int, buffer: IntArray)","io.matthewnelson.encoding.core.util.FeedBuffer.Finalize.invoke"]},{"name":"abstract fun isClosed(): Boolean","description":"io.matthewnelson.encoding.core.EncoderDecoder.Feed.isClosed","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-feed/is-closed.html","searchKeys":["isClosed","abstract fun isClosed(): Boolean","io.matthewnelson.encoding.core.EncoderDecoder.Feed.isClosed"]},{"name":"abstract fun output(decoded: Byte)","description":"io.matthewnelson.encoding.core.Decoder.OutFeed.output","location":"library/core/io.matthewnelson.encoding.core/-decoder/-out-feed/output.html","searchKeys":["output","abstract fun output(decoded: Byte)","io.matthewnelson.encoding.core.Decoder.OutFeed.output"]},{"name":"abstract fun output(encoded: Char)","description":"io.matthewnelson.encoding.core.Encoder.OutFeed.output","location":"library/core/io.matthewnelson.encoding.core/-encoder/-out-feed/output.html","searchKeys":["output","abstract fun output(encoded: Char)","io.matthewnelson.encoding.core.Encoder.OutFeed.output"]},{"name":"abstract inner class Feed : EncoderDecoder.Feed<C> ","description":"io.matthewnelson.encoding.core.Decoder.Feed","location":"library/core/io.matthewnelson.encoding.core/-decoder/-feed/index.html","searchKeys":["Feed","abstract inner class Feed : EncoderDecoder.Feed<C> ","io.matthewnelson.encoding.core.Decoder.Feed"]},{"name":"abstract inner class Feed : EncoderDecoder.Feed<C> ","description":"io.matthewnelson.encoding.core.Encoder.Feed","location":"library/core/io.matthewnelson.encoding.core/-encoder/-feed/index.html","searchKeys":["Feed","abstract inner class Feed : EncoderDecoder.Feed<C> ","io.matthewnelson.encoding.core.Encoder.Feed"]},{"name":"annotation class ExperimentalEncodingApi","description":"io.matthewnelson.encoding.core.ExperimentalEncodingApi","location":"library/core/io.matthewnelson.encoding.core/-experimental-encoding-api/index.html","searchKeys":["ExperimentalEncodingApi","annotation class ExperimentalEncodingApi","io.matthewnelson.encoding.core.ExperimentalEncodingApi"]},{"name":"class CTCase constructor(table: CharSequence)","description":"io.matthewnelson.encoding.core.util.CTCase","location":"library/core/io.matthewnelson.encoding.core.util/-c-t-case/index.html","searchKeys":["CTCase","class CTCase constructor(table: CharSequence)","io.matthewnelson.encoding.core.util.CTCase"]},{"name":"class DecoderInput","description":"io.matthewnelson.encoding.core.util.DecoderInput","location":"library/core/io.matthewnelson.encoding.core.util/-decoder-input/index.html","searchKeys":["DecoderInput","class DecoderInput","io.matthewnelson.encoding.core.util.DecoderInput"]},{"name":"class LineBreakOutFeed constructor(val interval: Byte, out: Encoder.OutFeed) : Encoder.OutFeed","description":"io.matthewnelson.encoding.core.util.LineBreakOutFeed","location":"library/core/io.matthewnelson.encoding.core.util/-line-break-out-feed/index.html","searchKeys":["LineBreakOutFeed","class LineBreakOutFeed constructor(val interval: Byte, out: Encoder.OutFeed) : Encoder.OutFeed","io.matthewnelson.encoding.core.util.LineBreakOutFeed"]},{"name":"class Parser(action: Pair<Iterable<Char>, DecoderAction>)","description":"io.matthewnelson.encoding.core.util.DecoderAction.Parser","location":"library/core/io.matthewnelson.encoding.core.util/-decoder-action/-parser/index.html","searchKeys":["Parser","class Parser(action: Pair<Iterable<Char>, DecoderAction>)","io.matthewnelson.encoding.core.util.DecoderAction.Parser"]},{"name":"constructor()","description":"io.matthewnelson.encoding.core.Decoder.Feed.Feed","location":"library/core/io.matthewnelson.encoding.core/-decoder/-feed/-feed.html","searchKeys":["Feed","constructor()","io.matthewnelson.encoding.core.Decoder.Feed.Feed"]},{"name":"constructor()","description":"io.matthewnelson.encoding.core.Encoder.Feed.Feed","location":"library/core/io.matthewnelson.encoding.core/-encoder/-feed/-feed.html","searchKeys":["Feed","constructor()","io.matthewnelson.encoding.core.Encoder.Feed.Feed"]},{"name":"constructor(blockSize: Int, flush: FeedBuffer.Flush, finalize: FeedBuffer.Finalize)","description":"io.matthewnelson.encoding.core.util.FeedBuffer.FeedBuffer","location":"library/core/io.matthewnelson.encoding.core.util/-feed-buffer/-feed-buffer.html","searchKeys":["FeedBuffer","constructor(blockSize: Int, flush: FeedBuffer.Flush, finalize: FeedBuffer.Finalize)","io.matthewnelson.encoding.core.util.FeedBuffer.FeedBuffer"]},{"name":"constructor(config: C)","description":"io.matthewnelson.encoding.core.EncoderDecoder.EncoderDecoder","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-encoder-decoder.html","searchKeys":["EncoderDecoder","constructor(config: C)","io.matthewnelson.encoding.core.EncoderDecoder.EncoderDecoder"]},{"name":"constructor(input: CharArray)","description":"io.matthewnelson.encoding.core.util.DecoderInput.DecoderInput","location":"library/core/io.matthewnelson.encoding.core.util/-decoder-input/-decoder-input.html","searchKeys":["DecoderInput","constructor(input: CharArray)","io.matthewnelson.encoding.core.util.DecoderInput.DecoderInput"]},{"name":"constructor(input: CharSequence)","description":"io.matthewnelson.encoding.core.util.DecoderInput.DecoderInput","location":"library/core/io.matthewnelson.encoding.core.util/-decoder-input/-decoder-input.html","searchKeys":["DecoderInput","constructor(input: CharSequence)","io.matthewnelson.encoding.core.util.DecoderInput.DecoderInput"]},{"name":"constructor(interval: Byte, out: Encoder.OutFeed)","description":"io.matthewnelson.encoding.core.util.LineBreakOutFeed.LineBreakOutFeed","location":"library/core/io.matthewnelson.encoding.core.util/-line-break-out-feed/-line-break-out-feed.html","searchKeys":["LineBreakOutFeed","constructor(interval: Byte, out: Encoder.OutFeed)","io.matthewnelson.encoding.core.util.LineBreakOutFeed.LineBreakOutFeed"]},{"name":"constructor(isLenient: Boolean?, lineBreakInterval: Byte, paddingChar: Char?)","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.Config","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/-config.html","searchKeys":["Config","constructor(isLenient: Boolean?, lineBreakInterval: Byte, paddingChar: Char?)","io.matthewnelson.encoding.core.EncoderDecoder.Config.Config"]},{"name":"constructor(message: String)","description":"io.matthewnelson.encoding.core.EncodingException.EncodingException","location":"library/core/io.matthewnelson.encoding.core/-encoding-exception/-encoding-exception.html","searchKeys":["EncodingException","constructor(message: String)","io.matthewnelson.encoding.core.EncodingException.EncodingException"]},{"name":"constructor(message: String)","description":"io.matthewnelson.encoding.core.EncodingSizeException.EncodingSizeException","location":"library/core/io.matthewnelson.encoding.core/-encoding-size-exception/-encoding-size-exception.html","searchKeys":["EncodingSizeException","constructor(message: String)","io.matthewnelson.encoding.core.EncodingSizeException.EncodingSizeException"]},{"name":"constructor(message: String, cause: Throwable?)","description":"io.matthewnelson.encoding.core.EncodingException.EncodingException","location":"library/core/io.matthewnelson.encoding.core/-encoding-exception/-encoding-exception.html","searchKeys":["EncodingException","constructor(message: String, cause: Throwable?)","io.matthewnelson.encoding.core.EncodingException.EncodingException"]},{"name":"constructor(message: String, cause: Throwable?)","description":"io.matthewnelson.encoding.core.EncodingSizeException.EncodingSizeException","location":"library/core/io.matthewnelson.encoding.core/-encoding-size-exception/-encoding-size-exception.html","searchKeys":["EncodingSizeException","constructor(message: String, cause: Throwable?)","io.matthewnelson.encoding.core.EncodingSizeException.EncodingSizeException"]},{"name":"constructor(name: String, value: Any?)","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.Setting.Setting","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/-setting/-setting.html","searchKeys":["Setting","constructor(name: String, value: Any?)","io.matthewnelson.encoding.core.EncoderDecoder.Config.Setting.Setting"]},{"name":"constructor(table: CharSequence)","description":"io.matthewnelson.encoding.core.util.CTCase.CTCase","location":"library/core/io.matthewnelson.encoding.core.util/-c-t-case/-c-t-case.html","searchKeys":["CTCase","constructor(table: CharSequence)","io.matthewnelson.encoding.core.util.CTCase.CTCase"]},{"name":"constructor(vararg action: Pair<Iterable<Char>, DecoderAction>)","description":"io.matthewnelson.encoding.core.util.DecoderAction.Parser.Parser","location":"library/core/io.matthewnelson.encoding.core.util/-decoder-action/-parser/-parser.html","searchKeys":["Parser","constructor(vararg action: Pair<Iterable<Char>, DecoderAction>)","io.matthewnelson.encoding.core.util.DecoderAction.Parser.Parser"]},{"name":"fun ByteArray.encodeToCharArray(encoder: Encoder<*>): CharArray","description":"io.matthewnelson.encoding.core.Encoder.Companion.encodeToCharArray","location":"library/core/io.matthewnelson.encoding.core/-encoder/-companion/encode-to-char-array.html","searchKeys":["encodeToCharArray","fun ByteArray.encodeToCharArray(encoder: Encoder<*>): CharArray","io.matthewnelson.encoding.core.Encoder.Companion.encodeToCharArray"]},{"name":"fun ByteArray.encodeToString(encoder: Encoder<*>): String","description":"io.matthewnelson.encoding.core.Encoder.Companion.encodeToString","location":"library/core/io.matthewnelson.encoding.core/-encoder/-companion/encode-to-string.html","searchKeys":["encodeToString","fun ByteArray.encodeToString(encoder: Encoder<*>): String","io.matthewnelson.encoding.core.Encoder.Companion.encodeToString"]},{"name":"fun CharArray.decodeToByteArray(decoder: Decoder<*>): ByteArray","description":"io.matthewnelson.encoding.core.Decoder.Companion.decodeToByteArray","location":"library/core/io.matthewnelson.encoding.core/-decoder/-companion/decode-to-byte-array.html","searchKeys":["decodeToByteArray","fun CharArray.decodeToByteArray(decoder: Decoder<*>): ByteArray","io.matthewnelson.encoding.core.Decoder.Companion.decodeToByteArray"]},{"name":"fun CharArray.decodeToByteArrayOrNull(decoder: Decoder<*>): ByteArray?","description":"io.matthewnelson.encoding.core.Decoder.Companion.decodeToByteArrayOrNull","location":"library/core/io.matthewnelson.encoding.core/-decoder/-companion/decode-to-byte-array-or-null.html","searchKeys":["decodeToByteArrayOrNull","fun CharArray.decodeToByteArrayOrNull(decoder: Decoder<*>): ByteArray?","io.matthewnelson.encoding.core.Decoder.Companion.decodeToByteArrayOrNull"]},{"name":"fun CharSequence.decodeToByteArray(decoder: Decoder<*>): ByteArray","description":"io.matthewnelson.encoding.core.Decoder.Companion.decodeToByteArray","location":"library/core/io.matthewnelson.encoding.core/-decoder/-companion/decode-to-byte-array.html","searchKeys":["decodeToByteArray","fun CharSequence.decodeToByteArray(decoder: Decoder<*>): ByteArray","io.matthewnelson.encoding.core.Decoder.Companion.decodeToByteArray"]},{"name":"fun CharSequence.decodeToByteArrayOrNull(decoder: Decoder<*>): ByteArray?","description":"io.matthewnelson.encoding.core.Decoder.Companion.decodeToByteArrayOrNull","location":"library/core/io.matthewnelson.encoding.core/-decoder/-companion/decode-to-byte-array-or-null.html","searchKeys":["decodeToByteArrayOrNull","fun CharSequence.decodeToByteArrayOrNull(decoder: Decoder<*>): ByteArray?","io.matthewnelson.encoding.core.Decoder.Companion.decodeToByteArrayOrNull"]},{"name":"fun consume(input: Byte)","description":"io.matthewnelson.encoding.core.Encoder.Feed.consume","location":"library/core/io.matthewnelson.encoding.core/-encoder/-feed/consume.html","searchKeys":["consume","fun consume(input: Byte)","io.matthewnelson.encoding.core.Encoder.Feed.consume"]},{"name":"fun consume(input: Char)","description":"io.matthewnelson.encoding.core.Decoder.Feed.consume","location":"library/core/io.matthewnelson.encoding.core/-decoder/-feed/consume.html","searchKeys":["consume","fun consume(input: Char)","io.matthewnelson.encoding.core.Decoder.Feed.consume"]},{"name":"fun decodeOutMaxSize(encodedSize: Long): Long","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.decodeOutMaxSize","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/decode-out-max-size.html","searchKeys":["decodeOutMaxSize","fun decodeOutMaxSize(encodedSize: Long): Long","io.matthewnelson.encoding.core.EncoderDecoder.Config.decodeOutMaxSize"]},{"name":"fun decodeOutMaxSizeOrFail(input: DecoderInput): Int","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.decodeOutMaxSizeOrFail","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/decode-out-max-size-or-fail.html","searchKeys":["decodeOutMaxSizeOrFail","fun decodeOutMaxSizeOrFail(input: DecoderInput): Int","io.matthewnelson.encoding.core.EncoderDecoder.Config.decodeOutMaxSizeOrFail"]},{"name":"fun doFinal()","description":"io.matthewnelson.encoding.core.EncoderDecoder.Feed.doFinal","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-feed/do-final.html","searchKeys":["doFinal","fun doFinal()","io.matthewnelson.encoding.core.EncoderDecoder.Feed.doFinal"]},{"name":"fun encodeOutSize(unEncodedSize: Long): Long","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.encodeOutSize","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/encode-out-size.html","searchKeys":["encodeOutSize","fun encodeOutSize(unEncodedSize: Long): Long","io.matthewnelson.encoding.core.EncoderDecoder.Config.encodeOutSize"]},{"name":"fun encodeOutSize(unEncodedSize: Long, lineBreakInterval: Byte): Long","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.encodeOutSize","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/encode-out-size.html","searchKeys":["encodeOutSize","fun encodeOutSize(unEncodedSize: Long, lineBreakInterval: Byte): Long","io.matthewnelson.encoding.core.EncoderDecoder.Config.encodeOutSize"]},{"name":"fun finalize()","description":"io.matthewnelson.encoding.core.util.FeedBuffer.finalize","location":"library/core/io.matthewnelson.encoding.core.util/-feed-buffer/finalize.html","searchKeys":["finalize","fun finalize()","io.matthewnelson.encoding.core.util.FeedBuffer.finalize"]},{"name":"fun interface DecoderAction","description":"io.matthewnelson.encoding.core.util.DecoderAction","location":"library/core/io.matthewnelson.encoding.core.util/-decoder-action/index.html","searchKeys":["DecoderAction","fun interface DecoderAction","io.matthewnelson.encoding.core.util.DecoderAction"]},{"name":"fun interface Finalize","description":"io.matthewnelson.encoding.core.util.FeedBuffer.Finalize","location":"library/core/io.matthewnelson.encoding.core.util/-feed-buffer/-finalize/index.html","searchKeys":["Finalize","fun interface Finalize","io.matthewnelson.encoding.core.util.FeedBuffer.Finalize"]},{"name":"fun interface Flush","description":"io.matthewnelson.encoding.core.util.FeedBuffer.Flush","location":"library/core/io.matthewnelson.encoding.core.util/-feed-buffer/-flush/index.html","searchKeys":["Flush","fun interface Flush","io.matthewnelson.encoding.core.util.FeedBuffer.Flush"]},{"name":"fun interface OutFeed","description":"io.matthewnelson.encoding.core.Decoder.OutFeed","location":"library/core/io.matthewnelson.encoding.core/-decoder/-out-feed/index.html","searchKeys":["OutFeed","fun interface OutFeed","io.matthewnelson.encoding.core.Decoder.OutFeed"]},{"name":"fun interface OutFeed","description":"io.matthewnelson.encoding.core.Encoder.OutFeed","location":"library/core/io.matthewnelson.encoding.core/-encoder/-out-feed/index.html","searchKeys":["OutFeed","fun interface OutFeed","io.matthewnelson.encoding.core.Encoder.OutFeed"]},{"name":"fun lowercase(char: Char): Char?","description":"io.matthewnelson.encoding.core.util.CTCase.lowercase","location":"library/core/io.matthewnelson.encoding.core.util/-c-t-case/lowercase.html","searchKeys":["lowercase","fun lowercase(char: Char): Char?","io.matthewnelson.encoding.core.util.CTCase.lowercase"]},{"name":"fun newDecoderFeed(out: Decoder.OutFeed): Decoder.Feed<C>","description":"io.matthewnelson.encoding.core.Decoder.newDecoderFeed","location":"library/core/io.matthewnelson.encoding.core/-decoder/new-decoder-feed.html","searchKeys":["newDecoderFeed","fun newDecoderFeed(out: Decoder.OutFeed): Decoder.Feed<C>","io.matthewnelson.encoding.core.Decoder.newDecoderFeed"]},{"name":"fun newEncoderFeed(out: Encoder.OutFeed): Encoder.Feed<C>","description":"io.matthewnelson.encoding.core.Encoder.newEncoderFeed","location":"library/core/io.matthewnelson.encoding.core/-encoder/new-encoder-feed.html","searchKeys":["newEncoderFeed","fun newEncoderFeed(out: Encoder.OutFeed): Encoder.Feed<C>","io.matthewnelson.encoding.core.Encoder.newEncoderFeed"]},{"name":"fun outSizeExceedsMaxEncodingSizeException(inputSize: Number, maxSize: Number): EncodingSizeException","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.Companion.outSizeExceedsMaxEncodingSizeException","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/-companion/out-size-exceeds-max-encoding-size-exception.html","searchKeys":["outSizeExceedsMaxEncodingSizeException","fun outSizeExceedsMaxEncodingSizeException(inputSize: Number, maxSize: Number): EncodingSizeException","io.matthewnelson.encoding.core.EncoderDecoder.Config.Companion.outSizeExceedsMaxEncodingSizeException"]},{"name":"fun parse(input: Char, isConstantTime: Boolean): Int?","description":"io.matthewnelson.encoding.core.util.DecoderAction.Parser.parse","location":"library/core/io.matthewnelson.encoding.core.util/-decoder-action/-parser/parse.html","searchKeys":["parse","fun parse(input: Char, isConstantTime: Boolean): Int?","io.matthewnelson.encoding.core.util.DecoderAction.Parser.parse"]},{"name":"fun reset()","description":"io.matthewnelson.encoding.core.util.LineBreakOutFeed.reset","location":"library/core/io.matthewnelson.encoding.core.util/-line-break-out-feed/reset.html","searchKeys":["reset","fun reset()","io.matthewnelson.encoding.core.util.LineBreakOutFeed.reset"]},{"name":"fun truncatedInputEncodingException(modulus: Int): EncodingException","description":"io.matthewnelson.encoding.core.util.FeedBuffer.Companion.truncatedInputEncodingException","location":"library/core/io.matthewnelson.encoding.core.util/-feed-buffer/-companion/truncated-input-encoding-exception.html","searchKeys":["truncatedInputEncodingException","fun truncatedInputEncodingException(modulus: Int): EncodingException","io.matthewnelson.encoding.core.util.FeedBuffer.Companion.truncatedInputEncodingException"]},{"name":"fun update(input: Int)","description":"io.matthewnelson.encoding.core.util.FeedBuffer.update","location":"library/core/io.matthewnelson.encoding.core.util/-feed-buffer/update.html","searchKeys":["update","fun update(input: Int)","io.matthewnelson.encoding.core.util.FeedBuffer.update"]},{"name":"fun uppercase(char: Char): Char?","description":"io.matthewnelson.encoding.core.util.CTCase.uppercase","location":"library/core/io.matthewnelson.encoding.core.util/-c-t-case/uppercase.html","searchKeys":["uppercase","fun uppercase(char: Char): Char?","io.matthewnelson.encoding.core.util.CTCase.uppercase"]},{"name":"inline fun <C : EncoderDecoder.Config, T : EncoderDecoder.Feed<C>?, V> T.use(block: (T) -> V): V","description":"io.matthewnelson.encoding.core.use","location":"library/core/io.matthewnelson.encoding.core/use.html","searchKeys":["use","inline fun <C : EncoderDecoder.Config, T : EncoderDecoder.Feed<C>?, V> T.use(block: (T) -> V): V","io.matthewnelson.encoding.core.use"]},{"name":"object Companion","description":"io.matthewnelson.encoding.core.Decoder.Companion","location":"library/core/io.matthewnelson.encoding.core/-decoder/-companion/index.html","searchKeys":["Companion","object Companion","io.matthewnelson.encoding.core.Decoder.Companion"]},{"name":"object Companion","description":"io.matthewnelson.encoding.core.Encoder.Companion","location":"library/core/io.matthewnelson.encoding.core/-encoder/-companion/index.html","searchKeys":["Companion","object Companion","io.matthewnelson.encoding.core.Encoder.Companion"]},{"name":"object Companion","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.Companion","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/-companion/index.html","searchKeys":["Companion","object Companion","io.matthewnelson.encoding.core.EncoderDecoder.Config.Companion"]},{"name":"object Companion","description":"io.matthewnelson.encoding.core.util.FeedBuffer.Companion","location":"library/core/io.matthewnelson.encoding.core.util/-feed-buffer/-companion/index.html","searchKeys":["Companion","object Companion","io.matthewnelson.encoding.core.util.FeedBuffer.Companion"]},{"name":"open class EncodingException : RuntimeException","description":"io.matthewnelson.encoding.core.EncodingException","location":"library/core/io.matthewnelson.encoding.core/-encoding-exception/index.html","searchKeys":["EncodingException","open class EncodingException : RuntimeException","io.matthewnelson.encoding.core.EncodingException"]},{"name":"open class EncodingSizeException : EncodingException","description":"io.matthewnelson.encoding.core.EncodingSizeException","location":"library/core/io.matthewnelson.encoding.core/-encoding-size-exception/index.html","searchKeys":["EncodingSizeException","open class EncodingSizeException : EncodingException","io.matthewnelson.encoding.core.EncodingSizeException"]},{"name":"open override fun output(encoded: Char)","description":"io.matthewnelson.encoding.core.util.LineBreakOutFeed.output","location":"library/core/io.matthewnelson.encoding.core.util/-line-break-out-feed/output.html","searchKeys":["output","open override fun output(encoded: Char)","io.matthewnelson.encoding.core.util.LineBreakOutFeed.output"]},{"name":"operator fun get(index: Int): Char","description":"io.matthewnelson.encoding.core.util.DecoderInput.get","location":"library/core/io.matthewnelson.encoding.core.util/-decoder-input/get.html","searchKeys":["get","operator fun get(index: Int): Char","io.matthewnelson.encoding.core.util.DecoderInput.get"]},{"name":"override fun close()","description":"io.matthewnelson.encoding.core.Decoder.Feed.close","location":"library/core/io.matthewnelson.encoding.core/-decoder/-feed/close.html","searchKeys":["close","override fun close()","io.matthewnelson.encoding.core.Decoder.Feed.close"]},{"name":"override fun close()","description":"io.matthewnelson.encoding.core.Encoder.Feed.close","location":"library/core/io.matthewnelson.encoding.core/-encoder/-feed/close.html","searchKeys":["close","override fun close()","io.matthewnelson.encoding.core.Encoder.Feed.close"]},{"name":"override fun flush()","description":"io.matthewnelson.encoding.core.Decoder.Feed.flush","location":"library/core/io.matthewnelson.encoding.core/-decoder/-feed/flush.html","searchKeys":["flush","override fun flush()","io.matthewnelson.encoding.core.Decoder.Feed.flush"]},{"name":"override fun flush()","description":"io.matthewnelson.encoding.core.Encoder.Feed.flush","location":"library/core/io.matthewnelson.encoding.core/-encoder/-feed/flush.html","searchKeys":["flush","override fun flush()","io.matthewnelson.encoding.core.Encoder.Feed.flush"]},{"name":"override fun isClosed(): Boolean","description":"io.matthewnelson.encoding.core.Decoder.Feed.isClosed","location":"library/core/io.matthewnelson.encoding.core/-decoder/-feed/is-closed.html","searchKeys":["isClosed","override fun isClosed(): Boolean","io.matthewnelson.encoding.core.Decoder.Feed.isClosed"]},{"name":"override fun isClosed(): Boolean","description":"io.matthewnelson.encoding.core.Encoder.Feed.isClosed","location":"library/core/io.matthewnelson.encoding.core/-encoder/-feed/is-closed.html","searchKeys":["isClosed","override fun isClosed(): Boolean","io.matthewnelson.encoding.core.Encoder.Feed.isClosed"]},{"name":"override val message: String","description":"io.matthewnelson.encoding.core.EncodingException.message","location":"library/core/io.matthewnelson.encoding.core/-encoding-exception/message.html","searchKeys":["message","override val message: String","io.matthewnelson.encoding.core.EncodingException.message"]},{"name":"protected abstract fun consumeProtected(input: Byte)","description":"io.matthewnelson.encoding.core.Encoder.Feed.consumeProtected","location":"library/core/io.matthewnelson.encoding.core/-encoder/-feed/consume-protected.html","searchKeys":["consumeProtected","protected abstract fun consumeProtected(input: Byte)","io.matthewnelson.encoding.core.Encoder.Feed.consumeProtected"]},{"name":"protected abstract fun consumeProtected(input: Char)","description":"io.matthewnelson.encoding.core.Decoder.Feed.consumeProtected","location":"library/core/io.matthewnelson.encoding.core/-decoder/-feed/consume-protected.html","searchKeys":["consumeProtected","protected abstract fun consumeProtected(input: Char)","io.matthewnelson.encoding.core.Decoder.Feed.consumeProtected"]},{"name":"protected abstract fun decodeOutMaxSizeOrFailProtected(encodedSize: Int, input: DecoderInput): Int","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.decodeOutMaxSizeOrFailProtected","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/decode-out-max-size-or-fail-protected.html","searchKeys":["decodeOutMaxSizeOrFailProtected","protected abstract fun decodeOutMaxSizeOrFailProtected(encodedSize: Int, input: DecoderInput): Int","io.matthewnelson.encoding.core.EncoderDecoder.Config.decodeOutMaxSizeOrFailProtected"]},{"name":"protected abstract fun decodeOutMaxSizeProtected(encodedSize: Long): Long","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.decodeOutMaxSizeProtected","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/decode-out-max-size-protected.html","searchKeys":["decodeOutMaxSizeProtected","protected abstract fun decodeOutMaxSizeProtected(encodedSize: Long): Long","io.matthewnelson.encoding.core.EncoderDecoder.Config.decodeOutMaxSizeProtected"]},{"name":"protected abstract fun doFinalProtected()","description":"io.matthewnelson.encoding.core.EncoderDecoder.Feed.doFinalProtected","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-feed/do-final-protected.html","searchKeys":["doFinalProtected","protected abstract fun doFinalProtected()","io.matthewnelson.encoding.core.EncoderDecoder.Feed.doFinalProtected"]},{"name":"protected abstract fun encodeOutSizeProtected(unEncodedSize: Long): Long","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.encodeOutSizeProtected","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/encode-out-size-protected.html","searchKeys":["encodeOutSizeProtected","protected abstract fun encodeOutSizeProtected(unEncodedSize: Long): Long","io.matthewnelson.encoding.core.EncoderDecoder.Config.encodeOutSizeProtected"]},{"name":"protected abstract fun name(): String","description":"io.matthewnelson.encoding.core.EncoderDecoder.name","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/name.html","searchKeys":["name","protected abstract fun name(): String","io.matthewnelson.encoding.core.EncoderDecoder.name"]},{"name":"protected abstract fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<C>","description":"io.matthewnelson.encoding.core.Decoder.newDecoderFeedProtected","location":"library/core/io.matthewnelson.encoding.core/-decoder/new-decoder-feed-protected.html","searchKeys":["newDecoderFeedProtected","protected abstract fun newDecoderFeedProtected(out: Decoder.OutFeed): Decoder.Feed<C>","io.matthewnelson.encoding.core.Decoder.newDecoderFeedProtected"]},{"name":"protected abstract fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<C>","description":"io.matthewnelson.encoding.core.Encoder.newEncoderFeedProtected","location":"library/core/io.matthewnelson.encoding.core/-encoder/new-encoder-feed-protected.html","searchKeys":["newEncoderFeedProtected","protected abstract fun newEncoderFeedProtected(out: Encoder.OutFeed): Encoder.Feed<C>","io.matthewnelson.encoding.core.Encoder.newEncoderFeedProtected"]},{"name":"protected abstract fun toStringAddSettings(): Set<EncoderDecoder.Config.Setting>","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.toStringAddSettings","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/to-string-add-settings.html","searchKeys":["toStringAddSettings","protected abstract fun toStringAddSettings(): Set<EncoderDecoder.Config.Setting>","io.matthewnelson.encoding.core.EncoderDecoder.Config.toStringAddSettings"]},{"name":"protected abstract override fun doFinalProtected()","description":"io.matthewnelson.encoding.core.Encoder.Feed.doFinalProtected","location":"library/core/io.matthewnelson.encoding.core/-encoder/-feed/do-final-protected.html","searchKeys":["doFinalProtected","protected abstract override fun doFinalProtected()","io.matthewnelson.encoding.core.Encoder.Feed.doFinalProtected"]},{"name":"protected constructor(config: C)","description":"io.matthewnelson.encoding.core.Decoder.Decoder","location":"library/core/io.matthewnelson.encoding.core/-decoder/-decoder.html","searchKeys":["Decoder","protected constructor(config: C)","io.matthewnelson.encoding.core.Decoder.Decoder"]},{"name":"protected constructor(config: C)","description":"io.matthewnelson.encoding.core.Encoder.Encoder","location":"library/core/io.matthewnelson.encoding.core/-encoder/-encoder.html","searchKeys":["Encoder","protected constructor(config: C)","io.matthewnelson.encoding.core.Encoder.Encoder"]},{"name":"protected constructor(config: C)","description":"io.matthewnelson.encoding.core.EncoderDecoder.Feed.Feed","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-feed/-feed.html","searchKeys":["Feed","protected constructor(config: C)","io.matthewnelson.encoding.core.EncoderDecoder.Feed.Feed"]},{"name":"protected inner class Setting(name: String, val value: Any?)","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.Setting","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/-setting/index.html","searchKeys":["Setting","protected inner class Setting(name: String, val value: Any?)","io.matthewnelson.encoding.core.EncoderDecoder.Config.Setting"]},{"name":"sealed class Decoder<C : EncoderDecoder.Config>(val config: C)","description":"io.matthewnelson.encoding.core.Decoder","location":"library/core/io.matthewnelson.encoding.core/-decoder/index.html","searchKeys":["Decoder","sealed class Decoder<C : EncoderDecoder.Config>(val config: C)","io.matthewnelson.encoding.core.Decoder"]},{"name":"sealed class Encoder<C : EncoderDecoder.Config>(config: C) : Decoder<C> ","description":"io.matthewnelson.encoding.core.Encoder","location":"library/core/io.matthewnelson.encoding.core/-encoder/index.html","searchKeys":["Encoder","sealed class Encoder<C : EncoderDecoder.Config>(config: C) : Decoder<C> ","io.matthewnelson.encoding.core.Encoder"]},{"name":"sealed class Feed<C : EncoderDecoder.Config>(val config: C)","description":"io.matthewnelson.encoding.core.EncoderDecoder.Feed","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-feed/index.html","searchKeys":["Feed","sealed class Feed<C : EncoderDecoder.Config>(val config: C)","io.matthewnelson.encoding.core.EncoderDecoder.Feed"]},{"name":"val actions: List<Pair<Set<Char>, DecoderAction>>","description":"io.matthewnelson.encoding.core.util.DecoderAction.Parser.actions","location":"library/core/io.matthewnelson.encoding.core.util/-decoder-action/-parser/actions.html","searchKeys":["actions","val actions: List<Pair<Set<Char>, DecoderAction>>","io.matthewnelson.encoding.core.util.DecoderAction.Parser.actions"]},{"name":"val blockSize: Int","description":"io.matthewnelson.encoding.core.util.FeedBuffer.blockSize","location":"library/core/io.matthewnelson.encoding.core.util/-feed-buffer/block-size.html","searchKeys":["blockSize","val blockSize: Int","io.matthewnelson.encoding.core.util.FeedBuffer.blockSize"]},{"name":"val config: C","description":"io.matthewnelson.encoding.core.Decoder.config","location":"library/core/io.matthewnelson.encoding.core/-decoder/config.html","searchKeys":["config","val config: C","io.matthewnelson.encoding.core.Decoder.config"]},{"name":"val config: C","description":"io.matthewnelson.encoding.core.EncoderDecoder.Feed.config","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-feed/config.html","searchKeys":["config","val config: C","io.matthewnelson.encoding.core.EncoderDecoder.Feed.config"]},{"name":"val interval: Byte","description":"io.matthewnelson.encoding.core.util.LineBreakOutFeed.interval","location":"library/core/io.matthewnelson.encoding.core.util/-line-break-out-feed/interval.html","searchKeys":["interval","val interval: Byte","io.matthewnelson.encoding.core.util.LineBreakOutFeed.interval"]},{"name":"val isLenient: Boolean?","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.isLenient","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/is-lenient.html","searchKeys":["isLenient","val isLenient: Boolean?","io.matthewnelson.encoding.core.EncoderDecoder.Config.isLenient"]},{"name":"val lineBreakInterval: Byte","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.lineBreakInterval","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/line-break-interval.html","searchKeys":["lineBreakInterval","val lineBreakInterval: Byte","io.matthewnelson.encoding.core.EncoderDecoder.Config.lineBreakInterval"]},{"name":"val lowers: Set<Char>","description":"io.matthewnelson.encoding.core.util.CTCase.lowers","location":"library/core/io.matthewnelson.encoding.core.util/-c-t-case/lowers.html","searchKeys":["lowers","val lowers: Set<Char>","io.matthewnelson.encoding.core.util.CTCase.lowers"]},{"name":"val name: String","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.Setting.name","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/-setting/name.html","searchKeys":["name","val name: String","io.matthewnelson.encoding.core.EncoderDecoder.Config.Setting.name"]},{"name":"val paddingChar: Char?","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.paddingChar","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/padding-char.html","searchKeys":["paddingChar","val paddingChar: Char?","io.matthewnelson.encoding.core.EncoderDecoder.Config.paddingChar"]},{"name":"val uppers: Set<Char>","description":"io.matthewnelson.encoding.core.util.CTCase.uppers","location":"library/core/io.matthewnelson.encoding.core.util/-c-t-case/uppers.html","searchKeys":["uppers","val uppers: Set<Char>","io.matthewnelson.encoding.core.util.CTCase.uppers"]},{"name":"val value: Any?","description":"io.matthewnelson.encoding.core.EncoderDecoder.Config.Setting.value","location":"library/core/io.matthewnelson.encoding.core/-encoder-decoder/-config/-setting/value.html","searchKeys":["value","val value: Any?","io.matthewnelson.encoding.core.EncoderDecoder.Config.Setting.value"]},{"name":"var count: Int","description":"io.matthewnelson.encoding.core.util.FeedBuffer.count","location":"library/core/io.matthewnelson.encoding.core.util/-feed-buffer/count.html","searchKeys":["count","var count: Int","io.matthewnelson.encoding.core.util.FeedBuffer.count"]}]